// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _memory_scanner_HH_
#define _memory_scanner_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "memory_scanner_AXILiteS_s_axi.h"
#include "memory_scanner_m_mm2s_ctl_m_axi.h"
#include "memory_scanner_m_s2mm_ctl_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 8,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_M_AXI_M_MM2S_CTL_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_M_MM2S_CTL_ID_WIDTH = 1,
         unsigned int C_M_AXI_M_MM2S_CTL_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_MM2S_CTL_DATA_WIDTH = 32,
         unsigned int C_M_AXI_M_MM2S_CTL_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_MM2S_CTL_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_MM2S_CTL_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_MM2S_CTL_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_S2MM_CTL_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_M_S2MM_CTL_ID_WIDTH = 1,
         unsigned int C_M_AXI_M_S2MM_CTL_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_S2MM_CTL_DATA_WIDTH = 32,
         unsigned int C_M_AXI_M_S2MM_CTL_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_S2MM_CTL_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_S2MM_CTL_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_M_S2MM_CTL_BUSER_WIDTH = 1>
struct memory_scanner : public sc_module {
    // Port declarations 116
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_m_mm2s_ctl_AWVALID;
    sc_in< sc_logic > m_axi_m_mm2s_ctl_AWREADY;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_ADDR_WIDTH> > m_axi_m_mm2s_ctl_AWADDR;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_ID_WIDTH> > m_axi_m_mm2s_ctl_AWID;
    sc_out< sc_lv<8> > m_axi_m_mm2s_ctl_AWLEN;
    sc_out< sc_lv<3> > m_axi_m_mm2s_ctl_AWSIZE;
    sc_out< sc_lv<2> > m_axi_m_mm2s_ctl_AWBURST;
    sc_out< sc_lv<2> > m_axi_m_mm2s_ctl_AWLOCK;
    sc_out< sc_lv<4> > m_axi_m_mm2s_ctl_AWCACHE;
    sc_out< sc_lv<3> > m_axi_m_mm2s_ctl_AWPROT;
    sc_out< sc_lv<4> > m_axi_m_mm2s_ctl_AWQOS;
    sc_out< sc_lv<4> > m_axi_m_mm2s_ctl_AWREGION;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_AWUSER_WIDTH> > m_axi_m_mm2s_ctl_AWUSER;
    sc_out< sc_logic > m_axi_m_mm2s_ctl_WVALID;
    sc_in< sc_logic > m_axi_m_mm2s_ctl_WREADY;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_DATA_WIDTH> > m_axi_m_mm2s_ctl_WDATA;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_DATA_WIDTH/8> > m_axi_m_mm2s_ctl_WSTRB;
    sc_out< sc_logic > m_axi_m_mm2s_ctl_WLAST;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_ID_WIDTH> > m_axi_m_mm2s_ctl_WID;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_WUSER_WIDTH> > m_axi_m_mm2s_ctl_WUSER;
    sc_out< sc_logic > m_axi_m_mm2s_ctl_ARVALID;
    sc_in< sc_logic > m_axi_m_mm2s_ctl_ARREADY;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_ADDR_WIDTH> > m_axi_m_mm2s_ctl_ARADDR;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_ID_WIDTH> > m_axi_m_mm2s_ctl_ARID;
    sc_out< sc_lv<8> > m_axi_m_mm2s_ctl_ARLEN;
    sc_out< sc_lv<3> > m_axi_m_mm2s_ctl_ARSIZE;
    sc_out< sc_lv<2> > m_axi_m_mm2s_ctl_ARBURST;
    sc_out< sc_lv<2> > m_axi_m_mm2s_ctl_ARLOCK;
    sc_out< sc_lv<4> > m_axi_m_mm2s_ctl_ARCACHE;
    sc_out< sc_lv<3> > m_axi_m_mm2s_ctl_ARPROT;
    sc_out< sc_lv<4> > m_axi_m_mm2s_ctl_ARQOS;
    sc_out< sc_lv<4> > m_axi_m_mm2s_ctl_ARREGION;
    sc_out< sc_uint<C_M_AXI_M_MM2S_CTL_ARUSER_WIDTH> > m_axi_m_mm2s_ctl_ARUSER;
    sc_in< sc_logic > m_axi_m_mm2s_ctl_RVALID;
    sc_out< sc_logic > m_axi_m_mm2s_ctl_RREADY;
    sc_in< sc_uint<C_M_AXI_M_MM2S_CTL_DATA_WIDTH> > m_axi_m_mm2s_ctl_RDATA;
    sc_in< sc_logic > m_axi_m_mm2s_ctl_RLAST;
    sc_in< sc_uint<C_M_AXI_M_MM2S_CTL_ID_WIDTH> > m_axi_m_mm2s_ctl_RID;
    sc_in< sc_uint<C_M_AXI_M_MM2S_CTL_RUSER_WIDTH> > m_axi_m_mm2s_ctl_RUSER;
    sc_in< sc_lv<2> > m_axi_m_mm2s_ctl_RRESP;
    sc_in< sc_logic > m_axi_m_mm2s_ctl_BVALID;
    sc_out< sc_logic > m_axi_m_mm2s_ctl_BREADY;
    sc_in< sc_lv<2> > m_axi_m_mm2s_ctl_BRESP;
    sc_in< sc_uint<C_M_AXI_M_MM2S_CTL_ID_WIDTH> > m_axi_m_mm2s_ctl_BID;
    sc_in< sc_uint<C_M_AXI_M_MM2S_CTL_BUSER_WIDTH> > m_axi_m_mm2s_ctl_BUSER;
    sc_out< sc_logic > m_axi_m_s2mm_ctl_AWVALID;
    sc_in< sc_logic > m_axi_m_s2mm_ctl_AWREADY;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_ADDR_WIDTH> > m_axi_m_s2mm_ctl_AWADDR;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_ID_WIDTH> > m_axi_m_s2mm_ctl_AWID;
    sc_out< sc_lv<8> > m_axi_m_s2mm_ctl_AWLEN;
    sc_out< sc_lv<3> > m_axi_m_s2mm_ctl_AWSIZE;
    sc_out< sc_lv<2> > m_axi_m_s2mm_ctl_AWBURST;
    sc_out< sc_lv<2> > m_axi_m_s2mm_ctl_AWLOCK;
    sc_out< sc_lv<4> > m_axi_m_s2mm_ctl_AWCACHE;
    sc_out< sc_lv<3> > m_axi_m_s2mm_ctl_AWPROT;
    sc_out< sc_lv<4> > m_axi_m_s2mm_ctl_AWQOS;
    sc_out< sc_lv<4> > m_axi_m_s2mm_ctl_AWREGION;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_AWUSER_WIDTH> > m_axi_m_s2mm_ctl_AWUSER;
    sc_out< sc_logic > m_axi_m_s2mm_ctl_WVALID;
    sc_in< sc_logic > m_axi_m_s2mm_ctl_WREADY;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_DATA_WIDTH> > m_axi_m_s2mm_ctl_WDATA;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_DATA_WIDTH/8> > m_axi_m_s2mm_ctl_WSTRB;
    sc_out< sc_logic > m_axi_m_s2mm_ctl_WLAST;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_ID_WIDTH> > m_axi_m_s2mm_ctl_WID;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_WUSER_WIDTH> > m_axi_m_s2mm_ctl_WUSER;
    sc_out< sc_logic > m_axi_m_s2mm_ctl_ARVALID;
    sc_in< sc_logic > m_axi_m_s2mm_ctl_ARREADY;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_ADDR_WIDTH> > m_axi_m_s2mm_ctl_ARADDR;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_ID_WIDTH> > m_axi_m_s2mm_ctl_ARID;
    sc_out< sc_lv<8> > m_axi_m_s2mm_ctl_ARLEN;
    sc_out< sc_lv<3> > m_axi_m_s2mm_ctl_ARSIZE;
    sc_out< sc_lv<2> > m_axi_m_s2mm_ctl_ARBURST;
    sc_out< sc_lv<2> > m_axi_m_s2mm_ctl_ARLOCK;
    sc_out< sc_lv<4> > m_axi_m_s2mm_ctl_ARCACHE;
    sc_out< sc_lv<3> > m_axi_m_s2mm_ctl_ARPROT;
    sc_out< sc_lv<4> > m_axi_m_s2mm_ctl_ARQOS;
    sc_out< sc_lv<4> > m_axi_m_s2mm_ctl_ARREGION;
    sc_out< sc_uint<C_M_AXI_M_S2MM_CTL_ARUSER_WIDTH> > m_axi_m_s2mm_ctl_ARUSER;
    sc_in< sc_logic > m_axi_m_s2mm_ctl_RVALID;
    sc_out< sc_logic > m_axi_m_s2mm_ctl_RREADY;
    sc_in< sc_uint<C_M_AXI_M_S2MM_CTL_DATA_WIDTH> > m_axi_m_s2mm_ctl_RDATA;
    sc_in< sc_logic > m_axi_m_s2mm_ctl_RLAST;
    sc_in< sc_uint<C_M_AXI_M_S2MM_CTL_ID_WIDTH> > m_axi_m_s2mm_ctl_RID;
    sc_in< sc_uint<C_M_AXI_M_S2MM_CTL_RUSER_WIDTH> > m_axi_m_s2mm_ctl_RUSER;
    sc_in< sc_lv<2> > m_axi_m_s2mm_ctl_RRESP;
    sc_in< sc_logic > m_axi_m_s2mm_ctl_BVALID;
    sc_out< sc_logic > m_axi_m_s2mm_ctl_BREADY;
    sc_in< sc_lv<2> > m_axi_m_s2mm_ctl_BRESP;
    sc_in< sc_uint<C_M_AXI_M_S2MM_CTL_ID_WIDTH> > m_axi_m_s2mm_ctl_BID;
    sc_in< sc_uint<C_M_AXI_M_S2MM_CTL_BUSER_WIDTH> > m_axi_m_s2mm_ctl_BUSER;
    sc_in< sc_lv<32> > s_in_V_V_TDATA;
    sc_in< sc_logic > s_in_V_V_TVALID;
    sc_out< sc_logic > s_in_V_V_TREADY;
    sc_out< sc_lv<32> > s_out_V_V_TDATA;
    sc_out< sc_logic > s_out_V_V_TVALID;
    sc_in< sc_logic > s_out_V_V_TREADY;
    sc_out< sc_logic > interrupt;


    // Module declarations
    memory_scanner(sc_module_name name);
    SC_HAS_PROCESS(memory_scanner);

    ~memory_scanner();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    memory_scanner_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* memory_scanner_AXILiteS_s_axi_U;
    memory_scanner_m_mm2s_ctl_m_axi<32,32,2,C_M_AXI_M_MM2S_CTL_ID_WIDTH,C_M_AXI_M_MM2S_CTL_ADDR_WIDTH,C_M_AXI_M_MM2S_CTL_DATA_WIDTH,C_M_AXI_M_MM2S_CTL_AWUSER_WIDTH,C_M_AXI_M_MM2S_CTL_ARUSER_WIDTH,C_M_AXI_M_MM2S_CTL_WUSER_WIDTH,C_M_AXI_M_MM2S_CTL_RUSER_WIDTH,C_M_AXI_M_MM2S_CTL_BUSER_WIDTH,C_M_AXI_M_MM2S_CTL_TARGET_ADDR,C_M_AXI_M_MM2S_CTL_USER_VALUE,C_M_AXI_M_MM2S_CTL_PROT_VALUE,C_M_AXI_M_MM2S_CTL_CACHE_VALUE>* memory_scanner_m_mm2s_ctl_m_axi_U;
    memory_scanner_m_s2mm_ctl_m_axi<32,32,2,C_M_AXI_M_S2MM_CTL_ID_WIDTH,C_M_AXI_M_S2MM_CTL_ADDR_WIDTH,C_M_AXI_M_S2MM_CTL_DATA_WIDTH,C_M_AXI_M_S2MM_CTL_AWUSER_WIDTH,C_M_AXI_M_S2MM_CTL_ARUSER_WIDTH,C_M_AXI_M_S2MM_CTL_WUSER_WIDTH,C_M_AXI_M_S2MM_CTL_RUSER_WIDTH,C_M_AXI_M_S2MM_CTL_BUSER_WIDTH,C_M_AXI_M_S2MM_CTL_TARGET_ADDR,C_M_AXI_M_S2MM_CTL_USER_VALUE,C_M_AXI_M_S2MM_CTL_PROT_VALUE,C_M_AXI_M_S2MM_CTL_CACHE_VALUE>* memory_scanner_m_s2mm_ctl_m_axi_U;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > search_string_0;
    sc_signal< sc_logic > search_string_0_ap_vld;
    sc_signal< sc_logic > search_string_0_ap_ack;
    sc_signal< sc_lv<8> > search_string_1;
    sc_signal< sc_logic > search_string_1_ap_vld;
    sc_signal< sc_logic > search_string_1_ap_ack;
    sc_signal< sc_lv<8> > search_string_2;
    sc_signal< sc_logic > search_string_2_ap_vld;
    sc_signal< sc_logic > search_string_2_ap_ack;
    sc_signal< sc_lv<8> > search_string_3;
    sc_signal< sc_logic > search_string_3_ap_vld;
    sc_signal< sc_logic > search_string_3_ap_ack;
    sc_signal< sc_lv<8> > search_string_4;
    sc_signal< sc_logic > search_string_4_ap_vld;
    sc_signal< sc_logic > search_string_4_ap_ack;
    sc_signal< sc_lv<8> > search_string_5;
    sc_signal< sc_logic > search_string_5_ap_vld;
    sc_signal< sc_logic > search_string_5_ap_ack;
    sc_signal< sc_lv<8> > search_string_6;
    sc_signal< sc_logic > search_string_6_ap_vld;
    sc_signal< sc_logic > search_string_6_ap_ack;
    sc_signal< sc_lv<8> > search_string_7;
    sc_signal< sc_logic > search_string_7_ap_vld;
    sc_signal< sc_logic > search_string_7_ap_ack;
    sc_signal< sc_lv<8> > search_string_8;
    sc_signal< sc_logic > search_string_8_ap_vld;
    sc_signal< sc_logic > search_string_8_ap_ack;
    sc_signal< sc_lv<8> > search_string_9;
    sc_signal< sc_logic > search_string_9_ap_vld;
    sc_signal< sc_logic > search_string_9_ap_ack;
    sc_signal< sc_lv<8> > search_string_10;
    sc_signal< sc_logic > search_string_10_ap_vld;
    sc_signal< sc_logic > search_string_10_ap_ack;
    sc_signal< sc_lv<8> > search_string_11;
    sc_signal< sc_logic > search_string_11_ap_vld;
    sc_signal< sc_logic > search_string_11_ap_ack;
    sc_signal< sc_lv<8> > search_string_12;
    sc_signal< sc_logic > search_string_12_ap_vld;
    sc_signal< sc_logic > search_string_12_ap_ack;
    sc_signal< sc_lv<8> > search_string_13;
    sc_signal< sc_logic > search_string_13_ap_vld;
    sc_signal< sc_logic > search_string_13_ap_ack;
    sc_signal< sc_lv<8> > search_string_14;
    sc_signal< sc_logic > search_string_14_ap_vld;
    sc_signal< sc_logic > search_string_14_ap_ack;
    sc_signal< sc_lv<8> > search_string_15;
    sc_signal< sc_logic > search_string_15_ap_vld;
    sc_signal< sc_logic > search_string_15_ap_ack;
    sc_signal< sc_lv<8> > search_string_16;
    sc_signal< sc_logic > search_string_16_ap_vld;
    sc_signal< sc_logic > search_string_16_ap_ack;
    sc_signal< sc_lv<32> > count_out;
    sc_signal< sc_logic > count_out_ap_vld;
    sc_signal< sc_lv<1> > ap_return;
    sc_signal< sc_logic > m_mm2s_ctl_AWVALID;
    sc_signal< sc_logic > m_mm2s_ctl_AWREADY;
    sc_signal< sc_lv<32> > m_mm2s_ctl_AWADDR;
    sc_signal< sc_lv<1> > m_mm2s_ctl_AWID;
    sc_signal< sc_lv<32> > m_mm2s_ctl_AWLEN;
    sc_signal< sc_lv<3> > m_mm2s_ctl_AWSIZE;
    sc_signal< sc_lv<2> > m_mm2s_ctl_AWBURST;
    sc_signal< sc_lv<2> > m_mm2s_ctl_AWLOCK;
    sc_signal< sc_lv<4> > m_mm2s_ctl_AWCACHE;
    sc_signal< sc_lv<3> > m_mm2s_ctl_AWPROT;
    sc_signal< sc_lv<4> > m_mm2s_ctl_AWQOS;
    sc_signal< sc_lv<4> > m_mm2s_ctl_AWREGION;
    sc_signal< sc_lv<1> > m_mm2s_ctl_AWUSER;
    sc_signal< sc_logic > m_mm2s_ctl_WVALID;
    sc_signal< sc_logic > m_mm2s_ctl_WREADY;
    sc_signal< sc_lv<32> > m_mm2s_ctl_WDATA;
    sc_signal< sc_lv<4> > m_mm2s_ctl_WSTRB;
    sc_signal< sc_logic > m_mm2s_ctl_WLAST;
    sc_signal< sc_lv<1> > m_mm2s_ctl_WID;
    sc_signal< sc_lv<1> > m_mm2s_ctl_WUSER;
    sc_signal< sc_logic > m_mm2s_ctl_ARVALID;
    sc_signal< sc_logic > m_mm2s_ctl_ARREADY;
    sc_signal< sc_lv<32> > m_mm2s_ctl_ARADDR;
    sc_signal< sc_lv<1> > m_mm2s_ctl_ARID;
    sc_signal< sc_lv<32> > m_mm2s_ctl_ARLEN;
    sc_signal< sc_lv<3> > m_mm2s_ctl_ARSIZE;
    sc_signal< sc_lv<2> > m_mm2s_ctl_ARBURST;
    sc_signal< sc_lv<2> > m_mm2s_ctl_ARLOCK;
    sc_signal< sc_lv<4> > m_mm2s_ctl_ARCACHE;
    sc_signal< sc_lv<3> > m_mm2s_ctl_ARPROT;
    sc_signal< sc_lv<4> > m_mm2s_ctl_ARQOS;
    sc_signal< sc_lv<4> > m_mm2s_ctl_ARREGION;
    sc_signal< sc_lv<1> > m_mm2s_ctl_ARUSER;
    sc_signal< sc_logic > m_mm2s_ctl_RVALID;
    sc_signal< sc_logic > m_mm2s_ctl_RREADY;
    sc_signal< sc_lv<32> > m_mm2s_ctl_RDATA;
    sc_signal< sc_logic > m_mm2s_ctl_RLAST;
    sc_signal< sc_lv<1> > m_mm2s_ctl_RID;
    sc_signal< sc_lv<1> > m_mm2s_ctl_RUSER;
    sc_signal< sc_lv<2> > m_mm2s_ctl_RRESP;
    sc_signal< sc_logic > m_mm2s_ctl_BVALID;
    sc_signal< sc_logic > m_mm2s_ctl_BREADY;
    sc_signal< sc_lv<2> > m_mm2s_ctl_BRESP;
    sc_signal< sc_lv<1> > m_mm2s_ctl_BID;
    sc_signal< sc_lv<1> > m_mm2s_ctl_BUSER;
    sc_signal< sc_logic > m_s2mm_ctl_AWVALID;
    sc_signal< sc_logic > m_s2mm_ctl_AWREADY;
    sc_signal< sc_lv<32> > m_s2mm_ctl_AWADDR;
    sc_signal< sc_lv<1> > m_s2mm_ctl_AWID;
    sc_signal< sc_lv<32> > m_s2mm_ctl_AWLEN;
    sc_signal< sc_lv<3> > m_s2mm_ctl_AWSIZE;
    sc_signal< sc_lv<2> > m_s2mm_ctl_AWBURST;
    sc_signal< sc_lv<2> > m_s2mm_ctl_AWLOCK;
    sc_signal< sc_lv<4> > m_s2mm_ctl_AWCACHE;
    sc_signal< sc_lv<3> > m_s2mm_ctl_AWPROT;
    sc_signal< sc_lv<4> > m_s2mm_ctl_AWQOS;
    sc_signal< sc_lv<4> > m_s2mm_ctl_AWREGION;
    sc_signal< sc_lv<1> > m_s2mm_ctl_AWUSER;
    sc_signal< sc_logic > m_s2mm_ctl_WVALID;
    sc_signal< sc_logic > m_s2mm_ctl_WREADY;
    sc_signal< sc_lv<32> > m_s2mm_ctl_WDATA;
    sc_signal< sc_lv<4> > m_s2mm_ctl_WSTRB;
    sc_signal< sc_logic > m_s2mm_ctl_WLAST;
    sc_signal< sc_lv<1> > m_s2mm_ctl_WID;
    sc_signal< sc_lv<1> > m_s2mm_ctl_WUSER;
    sc_signal< sc_logic > m_s2mm_ctl_ARVALID;
    sc_signal< sc_logic > m_s2mm_ctl_ARREADY;
    sc_signal< sc_lv<32> > m_s2mm_ctl_ARADDR;
    sc_signal< sc_lv<1> > m_s2mm_ctl_ARID;
    sc_signal< sc_lv<32> > m_s2mm_ctl_ARLEN;
    sc_signal< sc_lv<3> > m_s2mm_ctl_ARSIZE;
    sc_signal< sc_lv<2> > m_s2mm_ctl_ARBURST;
    sc_signal< sc_lv<2> > m_s2mm_ctl_ARLOCK;
    sc_signal< sc_lv<4> > m_s2mm_ctl_ARCACHE;
    sc_signal< sc_lv<3> > m_s2mm_ctl_ARPROT;
    sc_signal< sc_lv<4> > m_s2mm_ctl_ARQOS;
    sc_signal< sc_lv<4> > m_s2mm_ctl_ARREGION;
    sc_signal< sc_lv<1> > m_s2mm_ctl_ARUSER;
    sc_signal< sc_logic > m_s2mm_ctl_RVALID;
    sc_signal< sc_logic > m_s2mm_ctl_RREADY;
    sc_signal< sc_lv<32> > m_s2mm_ctl_RDATA;
    sc_signal< sc_logic > m_s2mm_ctl_RLAST;
    sc_signal< sc_lv<1> > m_s2mm_ctl_RID;
    sc_signal< sc_lv<1> > m_s2mm_ctl_RUSER;
    sc_signal< sc_lv<2> > m_s2mm_ctl_RRESP;
    sc_signal< sc_logic > m_s2mm_ctl_BVALID;
    sc_signal< sc_logic > m_s2mm_ctl_BREADY;
    sc_signal< sc_lv<2> > m_s2mm_ctl_BRESP;
    sc_signal< sc_lv<1> > m_s2mm_ctl_BID;
    sc_signal< sc_lv<1> > m_s2mm_ctl_BUSER;
    sc_signal< sc_lv<29> > tmp_1_reg_883;
    sc_signal< sc_lv<2> > tmp_3_fu_511_p1;
    sc_signal< sc_lv<2> > tmp_3_reg_888;
    sc_signal< sc_lv<31> > tmp_4_reg_893;
    sc_signal< sc_lv<19> > tmp_5_reg_898;
    sc_signal< sc_lv<12> > tmp_6_fu_552_p1;
    sc_signal< sc_lv<12> > tmp_6_reg_903;
    sc_signal< sc_logic > ap_sig_ioackin_m_mm2s_ctl_AWREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_mm2s_ctl_WREADY;
    sc_signal< sc_lv<29> > i_1_fu_585_p2;
    sc_signal< sc_lv<29> > i_1_reg_921;
    sc_signal< sc_lv<1> > exitcond1_fu_579_p2;
    sc_signal< bool > ap_sig_bdd_417;
    sc_signal< sc_lv<1> > grp_write_fu_232_p3;
    sc_signal< sc_logic > ap_sig_ioackin_s_out_V_V_TREADY;
    sc_signal< sc_lv<32> > p_Result_2_fu_625_p5;
    sc_signal< sc_lv<32> > p_Result_2_reg_926;
    sc_signal< sc_lv<3> > i_2_fu_643_p2;
    sc_signal< sc_lv<8> > data_out16_1_i_fu_714_p3;
    sc_signal< sc_lv<1> > exitcond_i_fu_637_p2;
    sc_signal< sc_lv<8> > data_out_1_i_fu_728_p3;
    sc_signal< sc_lv<8> > newSel9_fu_750_p3;
    sc_signal< sc_lv<8> > newSel1_fu_766_p3;
    sc_signal< sc_lv<3> > j_1_fu_780_p2;
    sc_signal< sc_lv<3> > j_1_reg_965;
    sc_signal< sc_lv<1> > exitcond_fu_774_p2;
    sc_signal< sc_lv<5> > tmp_12_fu_832_p1;
    sc_signal< bool > ap_sig_bdd_581;
    sc_signal< sc_lv<8> > data_word_load_phi_fu_824_p3;
    sc_signal< sc_lv<8> > data_word_load_phi_reg_970;
    sc_signal< sc_lv<32> > p_search_index_1_fu_848_p3;
    sc_signal< sc_lv<32> > p_count_fu_856_p3;
    sc_signal< sc_lv<32> > search_index_2_fu_875_p3;
    sc_signal< sc_lv<29> > i_reg_344;
    sc_signal< sc_lv<32> > search_index_reg_355;
    sc_signal< sc_lv<32> > count_reg_367;
    sc_signal< sc_lv<8> > data_out16_i_reg_380;
    sc_signal< sc_lv<8> > data_out_i_reg_392;
    sc_signal< sc_lv<8> > data_out2_i_reg_404;
    sc_signal< sc_lv<8> > data_out3_i_reg_416;
    sc_signal< sc_lv<3> > i_i_reg_428;
    sc_signal< sc_lv<3> > j_reg_439;
    sc_signal< sc_lv<32> > search_index_1_reg_450;
    sc_signal< sc_lv<8> > search_string_load_phi_reg_461;
    sc_signal< sc_logic > ap_reg_ioackin_m_mm2s_ctl_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_mm2s_ctl_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_mm2s_ctl_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_mm2s_ctl_WREADY;
    sc_signal< bool > ap_sig_bdd_714;
    sc_signal< sc_lv<32> > m_mm2s_ctl_assign_fu_515_p4;
    sc_signal< sc_lv<32> > m_mm2s_ctl_assign_1_fu_534_p3;
    sc_signal< sc_lv<32> > m_mm2s_ctl_assign_2_fu_556_p4;
    sc_signal< sc_logic > ap_reg_ioackin_s_out_V_V_TREADY;
    sc_signal< sc_lv<8> > p_Repl2_3_fu_591_p1;
    sc_signal< sc_lv<8> > p_Repl2_2_fu_595_p4;
    sc_signal< sc_lv<8> > p_Repl2_1_fu_605_p4;
    sc_signal< sc_lv<8> > p_Repl2_s_fu_615_p4;
    sc_signal< sc_lv<2> > tmp_9_fu_649_p1;
    sc_signal< sc_lv<5> > tmp_i_fu_653_p3;
    sc_signal< sc_lv<5> > Hi_assign_fu_661_p2;
    sc_signal< sc_lv<5> > Lo_assign_fu_671_p2;
    sc_signal< sc_lv<32> > Lo_assign_i_cast_fu_677_p1;
    sc_signal< sc_lv<32> > Hi_assign_i_cast_fu_667_p1;
    sc_signal< sc_lv<32> > p_Result_s_fu_681_p4;
    sc_signal< sc_lv<1> > sel_tmp2_i_fu_694_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_690_p1;
    sc_signal< sc_lv<1> > sel_tmp10_i_fu_708_p2;
    sc_signal< sc_lv<8> > sel_tmp9_i_fu_700_p3;
    sc_signal< sc_lv<1> > sel_tmp12_i_fu_722_p2;
    sc_signal< sc_lv<1> > or_cond_fu_736_p2;
    sc_signal< sc_lv<8> > newSel7_fu_742_p3;
    sc_signal< sc_lv<8> > newSel_fu_758_p3;
    sc_signal< sc_lv<2> > tmp_11_fu_786_p1;
    sc_signal< sc_lv<1> > sel_tmp_fu_790_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_804_p2;
    sc_signal< sc_lv<8> > sel_tmp1_fu_796_p3;
    sc_signal< sc_lv<1> > sel_tmp4_fu_818_p2;
    sc_signal< sc_lv<8> > sel_tmp3_fu_810_p3;
    sc_signal< sc_lv<1> > tmp_7_fu_836_p2;
    sc_signal< sc_lv<32> > count_1_fu_842_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_864_p2;
    sc_signal< sc_lv<32> > search_index_3_fu_869_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_587;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<5> ap_ST_st21_fsm_20;
    static const sc_lv<5> ap_ST_st22_fsm_21;
    static const int C_DATA_WIDTH;
    static const int C_M_AXI_M_MM2S_CTL_TARGET_ADDR;
    static const int C_M_AXI_M_MM2S_CTL_USER_VALUE;
    static const int C_M_AXI_M_MM2S_CTL_PROT_VALUE;
    static const int C_M_AXI_M_MM2S_CTL_CACHE_VALUE;
    static const int C_M_AXI_M_S2MM_CTL_TARGET_ADDR;
    static const int C_M_AXI_M_S2MM_CTL_USER_VALUE;
    static const int C_M_AXI_M_S2MM_CTL_PROT_VALUE;
    static const int C_M_AXI_M_S2MM_CTL_CACHE_VALUE;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<29> ap_const_lv29_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_40000000;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<29> ap_const_lv29_10000000;
    static const sc_lv<29> ap_const_lv29_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Hi_assign_fu_661_p2();
    void thread_Hi_assign_i_cast_fu_667_p1();
    void thread_Lo_assign_fu_671_p2();
    void thread_Lo_assign_i_cast_fu_677_p1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_417();
    void thread_ap_sig_bdd_581();
    void thread_ap_sig_bdd_587();
    void thread_ap_sig_bdd_714();
    void thread_ap_sig_ioackin_m_mm2s_ctl_ARREADY();
    void thread_ap_sig_ioackin_m_mm2s_ctl_AWREADY();
    void thread_ap_sig_ioackin_m_mm2s_ctl_WREADY();
    void thread_ap_sig_ioackin_s_out_V_V_TREADY();
    void thread_count_1_fu_842_p2();
    void thread_count_out();
    void thread_count_out_ap_vld();
    void thread_data_out16_1_i_fu_714_p3();
    void thread_data_out_1_i_fu_728_p3();
    void thread_data_word_load_phi_fu_824_p3();
    void thread_exitcond1_fu_579_p2();
    void thread_exitcond_fu_774_p2();
    void thread_exitcond_i_fu_637_p2();
    void thread_grp_write_fu_232_p3();
    void thread_i_1_fu_585_p2();
    void thread_i_2_fu_643_p2();
    void thread_j_1_fu_780_p2();
    void thread_m_mm2s_ctl_ARADDR();
    void thread_m_mm2s_ctl_ARBURST();
    void thread_m_mm2s_ctl_ARCACHE();
    void thread_m_mm2s_ctl_ARID();
    void thread_m_mm2s_ctl_ARLEN();
    void thread_m_mm2s_ctl_ARLOCK();
    void thread_m_mm2s_ctl_ARPROT();
    void thread_m_mm2s_ctl_ARQOS();
    void thread_m_mm2s_ctl_ARREGION();
    void thread_m_mm2s_ctl_ARSIZE();
    void thread_m_mm2s_ctl_ARUSER();
    void thread_m_mm2s_ctl_ARVALID();
    void thread_m_mm2s_ctl_AWADDR();
    void thread_m_mm2s_ctl_AWBURST();
    void thread_m_mm2s_ctl_AWCACHE();
    void thread_m_mm2s_ctl_AWID();
    void thread_m_mm2s_ctl_AWLEN();
    void thread_m_mm2s_ctl_AWLOCK();
    void thread_m_mm2s_ctl_AWPROT();
    void thread_m_mm2s_ctl_AWQOS();
    void thread_m_mm2s_ctl_AWREGION();
    void thread_m_mm2s_ctl_AWSIZE();
    void thread_m_mm2s_ctl_AWUSER();
    void thread_m_mm2s_ctl_AWVALID();
    void thread_m_mm2s_ctl_BREADY();
    void thread_m_mm2s_ctl_RREADY();
    void thread_m_mm2s_ctl_WDATA();
    void thread_m_mm2s_ctl_WID();
    void thread_m_mm2s_ctl_WLAST();
    void thread_m_mm2s_ctl_WSTRB();
    void thread_m_mm2s_ctl_WUSER();
    void thread_m_mm2s_ctl_WVALID();
    void thread_m_mm2s_ctl_assign_1_fu_534_p3();
    void thread_m_mm2s_ctl_assign_2_fu_556_p4();
    void thread_m_mm2s_ctl_assign_fu_515_p4();
    void thread_m_s2mm_ctl_ARADDR();
    void thread_m_s2mm_ctl_ARBURST();
    void thread_m_s2mm_ctl_ARCACHE();
    void thread_m_s2mm_ctl_ARID();
    void thread_m_s2mm_ctl_ARLEN();
    void thread_m_s2mm_ctl_ARLOCK();
    void thread_m_s2mm_ctl_ARPROT();
    void thread_m_s2mm_ctl_ARQOS();
    void thread_m_s2mm_ctl_ARREGION();
    void thread_m_s2mm_ctl_ARSIZE();
    void thread_m_s2mm_ctl_ARUSER();
    void thread_m_s2mm_ctl_ARVALID();
    void thread_m_s2mm_ctl_AWADDR();
    void thread_m_s2mm_ctl_AWBURST();
    void thread_m_s2mm_ctl_AWCACHE();
    void thread_m_s2mm_ctl_AWID();
    void thread_m_s2mm_ctl_AWLEN();
    void thread_m_s2mm_ctl_AWLOCK();
    void thread_m_s2mm_ctl_AWPROT();
    void thread_m_s2mm_ctl_AWQOS();
    void thread_m_s2mm_ctl_AWREGION();
    void thread_m_s2mm_ctl_AWSIZE();
    void thread_m_s2mm_ctl_AWUSER();
    void thread_m_s2mm_ctl_AWVALID();
    void thread_m_s2mm_ctl_BREADY();
    void thread_m_s2mm_ctl_RREADY();
    void thread_m_s2mm_ctl_WDATA();
    void thread_m_s2mm_ctl_WID();
    void thread_m_s2mm_ctl_WLAST();
    void thread_m_s2mm_ctl_WSTRB();
    void thread_m_s2mm_ctl_WUSER();
    void thread_m_s2mm_ctl_WVALID();
    void thread_newSel1_fu_766_p3();
    void thread_newSel7_fu_742_p3();
    void thread_newSel9_fu_750_p3();
    void thread_newSel_fu_758_p3();
    void thread_or_cond_fu_736_p2();
    void thread_p_Repl2_1_fu_605_p4();
    void thread_p_Repl2_2_fu_595_p4();
    void thread_p_Repl2_3_fu_591_p1();
    void thread_p_Repl2_s_fu_615_p4();
    void thread_p_Result_2_fu_625_p5();
    void thread_p_Result_s_fu_681_p4();
    void thread_p_count_fu_856_p3();
    void thread_p_search_index_1_fu_848_p3();
    void thread_s_in_V_V_TREADY();
    void thread_s_out_V_V_TDATA();
    void thread_s_out_V_V_TVALID();
    void thread_search_index_2_fu_875_p3();
    void thread_search_index_3_fu_869_p2();
    void thread_search_string_0_ap_ack();
    void thread_search_string_10_ap_ack();
    void thread_search_string_11_ap_ack();
    void thread_search_string_12_ap_ack();
    void thread_search_string_13_ap_ack();
    void thread_search_string_14_ap_ack();
    void thread_search_string_15_ap_ack();
    void thread_search_string_16_ap_ack();
    void thread_search_string_1_ap_ack();
    void thread_search_string_2_ap_ack();
    void thread_search_string_3_ap_ack();
    void thread_search_string_4_ap_ack();
    void thread_search_string_5_ap_ack();
    void thread_search_string_6_ap_ack();
    void thread_search_string_7_ap_ack();
    void thread_search_string_8_ap_ack();
    void thread_search_string_9_ap_ack();
    void thread_sel_tmp10_i_fu_708_p2();
    void thread_sel_tmp12_i_fu_722_p2();
    void thread_sel_tmp1_fu_796_p3();
    void thread_sel_tmp2_fu_804_p2();
    void thread_sel_tmp2_i_fu_694_p2();
    void thread_sel_tmp3_fu_810_p3();
    void thread_sel_tmp4_fu_818_p2();
    void thread_sel_tmp9_i_fu_700_p3();
    void thread_sel_tmp_fu_790_p2();
    void thread_tmp_10_fu_690_p1();
    void thread_tmp_11_fu_786_p1();
    void thread_tmp_12_fu_832_p1();
    void thread_tmp_2_fu_864_p2();
    void thread_tmp_3_fu_511_p1();
    void thread_tmp_6_fu_552_p1();
    void thread_tmp_7_fu_836_p2();
    void thread_tmp_9_fu_649_p1();
    void thread_tmp_i_fu_653_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
