// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _memory_scanner_HH_
#define _memory_scanner_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "memory_scanner_AXILiteS_s_axi.h"
#include "memory_scanner_ddr_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 8,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DDR_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_DDR_ID_WIDTH = 1,
         unsigned int C_M_AXI_DDR_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_DATA_WIDTH = 32,
         unsigned int C_M_AXI_DDR_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_DDR_BUSER_WIDTH = 1>
struct memory_scanner : public sc_module {
    // Port declarations 65
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_ddr_AWVALID;
    sc_in< sc_logic > m_axi_ddr_AWREADY;
    sc_out< sc_uint<C_M_AXI_DDR_ADDR_WIDTH> > m_axi_ddr_AWADDR;
    sc_out< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_AWID;
    sc_out< sc_lv<8> > m_axi_ddr_AWLEN;
    sc_out< sc_lv<3> > m_axi_ddr_AWSIZE;
    sc_out< sc_lv<2> > m_axi_ddr_AWBURST;
    sc_out< sc_lv<2> > m_axi_ddr_AWLOCK;
    sc_out< sc_lv<4> > m_axi_ddr_AWCACHE;
    sc_out< sc_lv<3> > m_axi_ddr_AWPROT;
    sc_out< sc_lv<4> > m_axi_ddr_AWQOS;
    sc_out< sc_lv<4> > m_axi_ddr_AWREGION;
    sc_out< sc_uint<C_M_AXI_DDR_AWUSER_WIDTH> > m_axi_ddr_AWUSER;
    sc_out< sc_logic > m_axi_ddr_WVALID;
    sc_in< sc_logic > m_axi_ddr_WREADY;
    sc_out< sc_uint<C_M_AXI_DDR_DATA_WIDTH> > m_axi_ddr_WDATA;
    sc_out< sc_uint<C_M_AXI_DDR_DATA_WIDTH/8> > m_axi_ddr_WSTRB;
    sc_out< sc_logic > m_axi_ddr_WLAST;
    sc_out< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_WID;
    sc_out< sc_uint<C_M_AXI_DDR_WUSER_WIDTH> > m_axi_ddr_WUSER;
    sc_out< sc_logic > m_axi_ddr_ARVALID;
    sc_in< sc_logic > m_axi_ddr_ARREADY;
    sc_out< sc_uint<C_M_AXI_DDR_ADDR_WIDTH> > m_axi_ddr_ARADDR;
    sc_out< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_ARID;
    sc_out< sc_lv<8> > m_axi_ddr_ARLEN;
    sc_out< sc_lv<3> > m_axi_ddr_ARSIZE;
    sc_out< sc_lv<2> > m_axi_ddr_ARBURST;
    sc_out< sc_lv<2> > m_axi_ddr_ARLOCK;
    sc_out< sc_lv<4> > m_axi_ddr_ARCACHE;
    sc_out< sc_lv<3> > m_axi_ddr_ARPROT;
    sc_out< sc_lv<4> > m_axi_ddr_ARQOS;
    sc_out< sc_lv<4> > m_axi_ddr_ARREGION;
    sc_out< sc_uint<C_M_AXI_DDR_ARUSER_WIDTH> > m_axi_ddr_ARUSER;
    sc_in< sc_logic > m_axi_ddr_RVALID;
    sc_out< sc_logic > m_axi_ddr_RREADY;
    sc_in< sc_uint<C_M_AXI_DDR_DATA_WIDTH> > m_axi_ddr_RDATA;
    sc_in< sc_logic > m_axi_ddr_RLAST;
    sc_in< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_RID;
    sc_in< sc_uint<C_M_AXI_DDR_RUSER_WIDTH> > m_axi_ddr_RUSER;
    sc_in< sc_lv<2> > m_axi_ddr_RRESP;
    sc_in< sc_logic > m_axi_ddr_BVALID;
    sc_out< sc_logic > m_axi_ddr_BREADY;
    sc_in< sc_lv<2> > m_axi_ddr_BRESP;
    sc_in< sc_uint<C_M_AXI_DDR_ID_WIDTH> > m_axi_ddr_BID;
    sc_in< sc_uint<C_M_AXI_DDR_BUSER_WIDTH> > m_axi_ddr_BUSER;
    sc_out< sc_logic > interrupt;


    // Module declarations
    memory_scanner(sc_module_name name);
    SC_HAS_PROCESS(memory_scanner);

    ~memory_scanner();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    memory_scanner_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* memory_scanner_AXILiteS_s_axi_U;
    memory_scanner_ddr_m_axi<8,32,2,C_M_AXI_DDR_ID_WIDTH,C_M_AXI_DDR_ADDR_WIDTH,C_M_AXI_DDR_DATA_WIDTH,C_M_AXI_DDR_AWUSER_WIDTH,C_M_AXI_DDR_ARUSER_WIDTH,C_M_AXI_DDR_WUSER_WIDTH,C_M_AXI_DDR_RUSER_WIDTH,C_M_AXI_DDR_BUSER_WIDTH,C_M_AXI_DDR_TARGET_ADDR,C_M_AXI_DDR_USER_VALUE,C_M_AXI_DDR_PROT_VALUE,C_M_AXI_DDR_CACHE_VALUE>* memory_scanner_ddr_m_axi_U;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<8> > search_string_0;
    sc_signal< sc_logic > search_string_0_ap_vld;
    sc_signal< sc_logic > search_string_0_ap_ack;
    sc_signal< sc_lv<8> > search_string_1;
    sc_signal< sc_logic > search_string_1_ap_vld;
    sc_signal< sc_logic > search_string_1_ap_ack;
    sc_signal< sc_lv<8> > search_string_2;
    sc_signal< sc_logic > search_string_2_ap_vld;
    sc_signal< sc_logic > search_string_2_ap_ack;
    sc_signal< sc_lv<8> > search_string_3;
    sc_signal< sc_logic > search_string_3_ap_vld;
    sc_signal< sc_logic > search_string_3_ap_ack;
    sc_signal< sc_lv<8> > search_string_4;
    sc_signal< sc_logic > search_string_4_ap_vld;
    sc_signal< sc_logic > search_string_4_ap_ack;
    sc_signal< sc_lv<8> > search_string_5;
    sc_signal< sc_logic > search_string_5_ap_vld;
    sc_signal< sc_logic > search_string_5_ap_ack;
    sc_signal< sc_lv<8> > search_string_6;
    sc_signal< sc_logic > search_string_6_ap_vld;
    sc_signal< sc_logic > search_string_6_ap_ack;
    sc_signal< sc_lv<8> > search_string_7;
    sc_signal< sc_logic > search_string_7_ap_vld;
    sc_signal< sc_logic > search_string_7_ap_ack;
    sc_signal< sc_lv<8> > search_string_8;
    sc_signal< sc_logic > search_string_8_ap_vld;
    sc_signal< sc_logic > search_string_8_ap_ack;
    sc_signal< sc_lv<8> > search_string_9;
    sc_signal< sc_logic > search_string_9_ap_vld;
    sc_signal< sc_logic > search_string_9_ap_ack;
    sc_signal< sc_lv<8> > search_string_10;
    sc_signal< sc_logic > search_string_10_ap_vld;
    sc_signal< sc_logic > search_string_10_ap_ack;
    sc_signal< sc_lv<8> > search_string_11;
    sc_signal< sc_logic > search_string_11_ap_vld;
    sc_signal< sc_logic > search_string_11_ap_ack;
    sc_signal< sc_lv<8> > search_string_12;
    sc_signal< sc_logic > search_string_12_ap_vld;
    sc_signal< sc_logic > search_string_12_ap_ack;
    sc_signal< sc_lv<8> > search_string_13;
    sc_signal< sc_logic > search_string_13_ap_vld;
    sc_signal< sc_logic > search_string_13_ap_ack;
    sc_signal< sc_lv<8> > search_string_14;
    sc_signal< sc_logic > search_string_14_ap_vld;
    sc_signal< sc_logic > search_string_14_ap_ack;
    sc_signal< sc_lv<8> > search_string_15;
    sc_signal< sc_logic > search_string_15_ap_vld;
    sc_signal< sc_logic > search_string_15_ap_ack;
    sc_signal< sc_lv<8> > search_string_16;
    sc_signal< sc_logic > search_string_16_ap_vld;
    sc_signal< sc_logic > search_string_16_ap_ack;
    sc_signal< sc_lv<32> > count_out;
    sc_signal< sc_logic > count_out_ap_vld;
    sc_signal< sc_lv<1> > ap_return;
    sc_signal< sc_logic > ddr_AWVALID;
    sc_signal< sc_logic > ddr_AWREADY;
    sc_signal< sc_lv<32> > ddr_AWADDR;
    sc_signal< sc_lv<1> > ddr_AWID;
    sc_signal< sc_lv<32> > ddr_AWLEN;
    sc_signal< sc_lv<3> > ddr_AWSIZE;
    sc_signal< sc_lv<2> > ddr_AWBURST;
    sc_signal< sc_lv<2> > ddr_AWLOCK;
    sc_signal< sc_lv<4> > ddr_AWCACHE;
    sc_signal< sc_lv<3> > ddr_AWPROT;
    sc_signal< sc_lv<4> > ddr_AWQOS;
    sc_signal< sc_lv<4> > ddr_AWREGION;
    sc_signal< sc_lv<1> > ddr_AWUSER;
    sc_signal< sc_logic > ddr_WVALID;
    sc_signal< sc_logic > ddr_WREADY;
    sc_signal< sc_lv<8> > ddr_WDATA;
    sc_signal< sc_lv<1> > ddr_WSTRB;
    sc_signal< sc_logic > ddr_WLAST;
    sc_signal< sc_lv<1> > ddr_WID;
    sc_signal< sc_lv<1> > ddr_WUSER;
    sc_signal< sc_logic > ddr_ARVALID;
    sc_signal< sc_logic > ddr_ARREADY;
    sc_signal< sc_lv<32> > ddr_ARADDR;
    sc_signal< sc_lv<1> > ddr_ARID;
    sc_signal< sc_lv<32> > ddr_ARLEN;
    sc_signal< sc_lv<3> > ddr_ARSIZE;
    sc_signal< sc_lv<2> > ddr_ARBURST;
    sc_signal< sc_lv<2> > ddr_ARLOCK;
    sc_signal< sc_lv<4> > ddr_ARCACHE;
    sc_signal< sc_lv<3> > ddr_ARPROT;
    sc_signal< sc_lv<4> > ddr_ARQOS;
    sc_signal< sc_lv<4> > ddr_ARREGION;
    sc_signal< sc_lv<1> > ddr_ARUSER;
    sc_signal< sc_logic > ddr_RVALID;
    sc_signal< sc_logic > ddr_RREADY;
    sc_signal< sc_lv<8> > ddr_RDATA;
    sc_signal< sc_logic > ddr_RLAST;
    sc_signal< sc_lv<1> > ddr_RID;
    sc_signal< sc_lv<1> > ddr_RUSER;
    sc_signal< sc_lv<2> > ddr_RRESP;
    sc_signal< sc_logic > ddr_BVALID;
    sc_signal< sc_logic > ddr_BREADY;
    sc_signal< sc_lv<2> > ddr_BRESP;
    sc_signal< sc_lv<1> > ddr_BID;
    sc_signal< sc_lv<1> > ddr_BUSER;
    sc_signal< sc_lv<31> > tmp_8_fu_345_p2;
    sc_signal< sc_lv<31> > tmp_8_reg_434;
    sc_signal< sc_lv<1> > exitcond1_fu_339_p2;
    sc_signal< sc_logic > ap_sig_ioackin_ddr_ARREADY;
    sc_signal< sc_lv<8> > ddr_addr_read_reg_445;
    sc_signal< sc_lv<5> > tmp_2_fu_362_p1;
    sc_signal< bool > ap_sig_bdd_366;
    sc_signal< sc_lv<32> > count_0_1_fu_407_p3;
    sc_signal< sc_lv<32> > search_index_0_1_fu_415_p3;
    sc_signal< sc_lv<32> > count_0_2_fu_423_p3;
    sc_signal< sc_lv<32> > count_reg_251;
    sc_signal< sc_lv<32> > search_index_reg_263;
    sc_signal< sc_lv<32> > tmp_reg_275;
    sc_signal< sc_lv<31> > j_reg_288;
    sc_signal< sc_lv<8> > search_string_load_phi_reg_299;
    sc_signal< sc_lv<64> > tmp_1_fu_351_p1;
    sc_signal< sc_logic > ap_reg_ioackin_ddr_ARREADY;
    sc_signal< sc_lv<1> > tmp_3_fu_366_p2;
    sc_signal< sc_lv<32> > tmp_4_fu_371_p2;
    sc_signal< sc_lv<32> > search_index_0_fu_377_p3;
    sc_signal< sc_lv<28> > tmp_5_fu_385_p4;
    sc_signal< sc_lv<1> > icmp_fu_395_p2;
    sc_signal< sc_lv<32> > count_0_fu_401_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_444;
    sc_signal< bool > ap_sig_bdd_369;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<2> ap_ST_st3_fsm_2;
    static const sc_lv<2> ap_ST_st4_fsm_3;
    static const int C_DATA_WIDTH;
    static const int C_M_AXI_DDR_TARGET_ADDR;
    static const int C_M_AXI_DDR_USER_VALUE;
    static const int C_M_AXI_DDR_PROT_VALUE;
    static const int C_M_AXI_DDR_CACHE_VALUE;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<31> ap_const_lv31_40000000;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<28> ap_const_lv28_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_366();
    void thread_ap_sig_bdd_369();
    void thread_ap_sig_bdd_444();
    void thread_ap_sig_ioackin_ddr_ARREADY();
    void thread_count_0_1_fu_407_p3();
    void thread_count_0_2_fu_423_p3();
    void thread_count_0_fu_401_p2();
    void thread_count_out();
    void thread_count_out_ap_vld();
    void thread_ddr_ARADDR();
    void thread_ddr_ARBURST();
    void thread_ddr_ARCACHE();
    void thread_ddr_ARID();
    void thread_ddr_ARLEN();
    void thread_ddr_ARLOCK();
    void thread_ddr_ARPROT();
    void thread_ddr_ARQOS();
    void thread_ddr_ARREGION();
    void thread_ddr_ARSIZE();
    void thread_ddr_ARUSER();
    void thread_ddr_ARVALID();
    void thread_ddr_AWADDR();
    void thread_ddr_AWBURST();
    void thread_ddr_AWCACHE();
    void thread_ddr_AWID();
    void thread_ddr_AWLEN();
    void thread_ddr_AWLOCK();
    void thread_ddr_AWPROT();
    void thread_ddr_AWQOS();
    void thread_ddr_AWREGION();
    void thread_ddr_AWSIZE();
    void thread_ddr_AWUSER();
    void thread_ddr_AWVALID();
    void thread_ddr_BREADY();
    void thread_ddr_RREADY();
    void thread_ddr_WDATA();
    void thread_ddr_WID();
    void thread_ddr_WLAST();
    void thread_ddr_WSTRB();
    void thread_ddr_WUSER();
    void thread_ddr_WVALID();
    void thread_exitcond1_fu_339_p2();
    void thread_icmp_fu_395_p2();
    void thread_search_index_0_1_fu_415_p3();
    void thread_search_index_0_fu_377_p3();
    void thread_search_string_0_ap_ack();
    void thread_search_string_10_ap_ack();
    void thread_search_string_11_ap_ack();
    void thread_search_string_12_ap_ack();
    void thread_search_string_13_ap_ack();
    void thread_search_string_14_ap_ack();
    void thread_search_string_15_ap_ack();
    void thread_search_string_16_ap_ack();
    void thread_search_string_1_ap_ack();
    void thread_search_string_2_ap_ack();
    void thread_search_string_3_ap_ack();
    void thread_search_string_4_ap_ack();
    void thread_search_string_5_ap_ack();
    void thread_search_string_6_ap_ack();
    void thread_search_string_7_ap_ack();
    void thread_search_string_8_ap_ack();
    void thread_search_string_9_ap_ack();
    void thread_tmp_1_fu_351_p1();
    void thread_tmp_2_fu_362_p1();
    void thread_tmp_3_fu_366_p2();
    void thread_tmp_4_fu_371_p2();
    void thread_tmp_5_fu_385_p4();
    void thread_tmp_8_fu_345_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
