// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.1
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "memory_scanner.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic memory_scanner::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic memory_scanner::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> memory_scanner::ap_ST_st1_fsm_0 = "00";
const sc_lv<2> memory_scanner::ap_ST_st2_fsm_1 = "1";
const sc_lv<2> memory_scanner::ap_ST_st3_fsm_2 = "10";
const sc_lv<2> memory_scanner::ap_ST_st4_fsm_3 = "11";
const int memory_scanner::C_DATA_WIDTH = "100000";
const int memory_scanner::C_M_AXI_DDR_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int memory_scanner::C_M_AXI_DDR_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int memory_scanner::C_M_AXI_DDR_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int memory_scanner::C_M_AXI_DDR_CACHE_VALUE = "11";
const sc_lv<1> memory_scanner::ap_const_lv1_0 = "0";
const sc_lv<5> memory_scanner::ap_const_lv5_F = "1111";
const sc_lv<5> memory_scanner::ap_const_lv5_E = "1110";
const sc_lv<5> memory_scanner::ap_const_lv5_D = "1101";
const sc_lv<5> memory_scanner::ap_const_lv5_C = "1100";
const sc_lv<5> memory_scanner::ap_const_lv5_B = "1011";
const sc_lv<5> memory_scanner::ap_const_lv5_A = "1010";
const sc_lv<5> memory_scanner::ap_const_lv5_9 = "1001";
const sc_lv<5> memory_scanner::ap_const_lv5_8 = "1000";
const sc_lv<5> memory_scanner::ap_const_lv5_7 = "111";
const sc_lv<5> memory_scanner::ap_const_lv5_6 = "110";
const sc_lv<5> memory_scanner::ap_const_lv5_5 = "101";
const sc_lv<5> memory_scanner::ap_const_lv5_4 = "100";
const sc_lv<5> memory_scanner::ap_const_lv5_3 = "11";
const sc_lv<5> memory_scanner::ap_const_lv5_2 = "10";
const sc_lv<5> memory_scanner::ap_const_lv5_1 = "1";
const sc_lv<5> memory_scanner::ap_const_lv5_0 = "00000";
const sc_lv<32> memory_scanner::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<31> memory_scanner::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> memory_scanner::ap_const_lv32_1 = "1";
const sc_lv<3> memory_scanner::ap_const_lv3_0 = "000";
const sc_lv<2> memory_scanner::ap_const_lv2_0 = "00";
const sc_lv<4> memory_scanner::ap_const_lv4_0 = "0000";
const sc_lv<31> memory_scanner::ap_const_lv31_40000000 = "1000000000000000000000000000000";
const sc_lv<31> memory_scanner::ap_const_lv31_1 = "1";
const sc_lv<32> memory_scanner::ap_const_lv32_4 = "100";
const sc_lv<32> memory_scanner::ap_const_lv32_1F = "11111";
const sc_lv<28> memory_scanner::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<1> memory_scanner::ap_const_lv1_1 = "1";
const sc_lv<8> memory_scanner::ap_const_lv8_0 = "00000000";
const bool memory_scanner::ap_true = true;

memory_scanner::memory_scanner(sc_module_name name) : sc_module(name), mVcdFile(0) {
    memory_scanner_AXILiteS_s_axi_U = new memory_scanner_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("memory_scanner_AXILiteS_s_axi_U");
    memory_scanner_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    memory_scanner_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    memory_scanner_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    memory_scanner_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    memory_scanner_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    memory_scanner_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    memory_scanner_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    memory_scanner_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    memory_scanner_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    memory_scanner_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    memory_scanner_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    memory_scanner_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    memory_scanner_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    memory_scanner_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    memory_scanner_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    memory_scanner_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    memory_scanner_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    memory_scanner_AXILiteS_s_axi_U->ACLK(ap_clk);
    memory_scanner_AXILiteS_s_axi_U->ARESETN(ap_rst_n);
    memory_scanner_AXILiteS_s_axi_U->ap_start(ap_start);
    memory_scanner_AXILiteS_s_axi_U->interrupt(interrupt);
    memory_scanner_AXILiteS_s_axi_U->ap_ready(ap_ready);
    memory_scanner_AXILiteS_s_axi_U->ap_done(ap_done);
    memory_scanner_AXILiteS_s_axi_U->ap_idle(ap_idle);
    memory_scanner_AXILiteS_s_axi_U->ap_return(ap_return);
    memory_scanner_AXILiteS_s_axi_U->search_string_0(search_string_0);
    memory_scanner_AXILiteS_s_axi_U->search_string_0_ap_vld(search_string_0_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_0_ap_ack(search_string_0_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_1(search_string_1);
    memory_scanner_AXILiteS_s_axi_U->search_string_1_ap_vld(search_string_1_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_1_ap_ack(search_string_1_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_2(search_string_2);
    memory_scanner_AXILiteS_s_axi_U->search_string_2_ap_vld(search_string_2_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_2_ap_ack(search_string_2_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_3(search_string_3);
    memory_scanner_AXILiteS_s_axi_U->search_string_3_ap_vld(search_string_3_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_3_ap_ack(search_string_3_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_4(search_string_4);
    memory_scanner_AXILiteS_s_axi_U->search_string_4_ap_vld(search_string_4_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_4_ap_ack(search_string_4_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_5(search_string_5);
    memory_scanner_AXILiteS_s_axi_U->search_string_5_ap_vld(search_string_5_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_5_ap_ack(search_string_5_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_6(search_string_6);
    memory_scanner_AXILiteS_s_axi_U->search_string_6_ap_vld(search_string_6_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_6_ap_ack(search_string_6_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_7(search_string_7);
    memory_scanner_AXILiteS_s_axi_U->search_string_7_ap_vld(search_string_7_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_7_ap_ack(search_string_7_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_8(search_string_8);
    memory_scanner_AXILiteS_s_axi_U->search_string_8_ap_vld(search_string_8_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_8_ap_ack(search_string_8_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_9(search_string_9);
    memory_scanner_AXILiteS_s_axi_U->search_string_9_ap_vld(search_string_9_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_9_ap_ack(search_string_9_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_10(search_string_10);
    memory_scanner_AXILiteS_s_axi_U->search_string_10_ap_vld(search_string_10_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_10_ap_ack(search_string_10_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_11(search_string_11);
    memory_scanner_AXILiteS_s_axi_U->search_string_11_ap_vld(search_string_11_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_11_ap_ack(search_string_11_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_12(search_string_12);
    memory_scanner_AXILiteS_s_axi_U->search_string_12_ap_vld(search_string_12_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_12_ap_ack(search_string_12_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_13(search_string_13);
    memory_scanner_AXILiteS_s_axi_U->search_string_13_ap_vld(search_string_13_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_13_ap_ack(search_string_13_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_14(search_string_14);
    memory_scanner_AXILiteS_s_axi_U->search_string_14_ap_vld(search_string_14_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_14_ap_ack(search_string_14_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_15(search_string_15);
    memory_scanner_AXILiteS_s_axi_U->search_string_15_ap_vld(search_string_15_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_15_ap_ack(search_string_15_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->search_string_16(search_string_16);
    memory_scanner_AXILiteS_s_axi_U->search_string_16_ap_vld(search_string_16_ap_vld);
    memory_scanner_AXILiteS_s_axi_U->search_string_16_ap_ack(search_string_16_ap_ack);
    memory_scanner_AXILiteS_s_axi_U->count_out(count_out);
    memory_scanner_AXILiteS_s_axi_U->count_out_ap_vld(count_out_ap_vld);
    memory_scanner_ddr_m_axi_U = new memory_scanner_ddr_m_axi<8,32,2,C_M_AXI_DDR_ID_WIDTH,C_M_AXI_DDR_ADDR_WIDTH,C_M_AXI_DDR_DATA_WIDTH,C_M_AXI_DDR_AWUSER_WIDTH,C_M_AXI_DDR_ARUSER_WIDTH,C_M_AXI_DDR_WUSER_WIDTH,C_M_AXI_DDR_RUSER_WIDTH,C_M_AXI_DDR_BUSER_WIDTH,C_M_AXI_DDR_TARGET_ADDR,C_M_AXI_DDR_USER_VALUE,C_M_AXI_DDR_PROT_VALUE,C_M_AXI_DDR_CACHE_VALUE>("memory_scanner_ddr_m_axi_U");
    memory_scanner_ddr_m_axi_U->AWVALID(m_axi_ddr_AWVALID);
    memory_scanner_ddr_m_axi_U->AWREADY(m_axi_ddr_AWREADY);
    memory_scanner_ddr_m_axi_U->AWADDR(m_axi_ddr_AWADDR);
    memory_scanner_ddr_m_axi_U->AWID(m_axi_ddr_AWID);
    memory_scanner_ddr_m_axi_U->AWLEN(m_axi_ddr_AWLEN);
    memory_scanner_ddr_m_axi_U->AWSIZE(m_axi_ddr_AWSIZE);
    memory_scanner_ddr_m_axi_U->AWBURST(m_axi_ddr_AWBURST);
    memory_scanner_ddr_m_axi_U->AWLOCK(m_axi_ddr_AWLOCK);
    memory_scanner_ddr_m_axi_U->AWCACHE(m_axi_ddr_AWCACHE);
    memory_scanner_ddr_m_axi_U->AWPROT(m_axi_ddr_AWPROT);
    memory_scanner_ddr_m_axi_U->AWQOS(m_axi_ddr_AWQOS);
    memory_scanner_ddr_m_axi_U->AWREGION(m_axi_ddr_AWREGION);
    memory_scanner_ddr_m_axi_U->AWUSER(m_axi_ddr_AWUSER);
    memory_scanner_ddr_m_axi_U->WVALID(m_axi_ddr_WVALID);
    memory_scanner_ddr_m_axi_U->WREADY(m_axi_ddr_WREADY);
    memory_scanner_ddr_m_axi_U->WDATA(m_axi_ddr_WDATA);
    memory_scanner_ddr_m_axi_U->WSTRB(m_axi_ddr_WSTRB);
    memory_scanner_ddr_m_axi_U->WLAST(m_axi_ddr_WLAST);
    memory_scanner_ddr_m_axi_U->WID(m_axi_ddr_WID);
    memory_scanner_ddr_m_axi_U->WUSER(m_axi_ddr_WUSER);
    memory_scanner_ddr_m_axi_U->ARVALID(m_axi_ddr_ARVALID);
    memory_scanner_ddr_m_axi_U->ARREADY(m_axi_ddr_ARREADY);
    memory_scanner_ddr_m_axi_U->ARADDR(m_axi_ddr_ARADDR);
    memory_scanner_ddr_m_axi_U->ARID(m_axi_ddr_ARID);
    memory_scanner_ddr_m_axi_U->ARLEN(m_axi_ddr_ARLEN);
    memory_scanner_ddr_m_axi_U->ARSIZE(m_axi_ddr_ARSIZE);
    memory_scanner_ddr_m_axi_U->ARBURST(m_axi_ddr_ARBURST);
    memory_scanner_ddr_m_axi_U->ARLOCK(m_axi_ddr_ARLOCK);
    memory_scanner_ddr_m_axi_U->ARCACHE(m_axi_ddr_ARCACHE);
    memory_scanner_ddr_m_axi_U->ARPROT(m_axi_ddr_ARPROT);
    memory_scanner_ddr_m_axi_U->ARQOS(m_axi_ddr_ARQOS);
    memory_scanner_ddr_m_axi_U->ARREGION(m_axi_ddr_ARREGION);
    memory_scanner_ddr_m_axi_U->ARUSER(m_axi_ddr_ARUSER);
    memory_scanner_ddr_m_axi_U->RVALID(m_axi_ddr_RVALID);
    memory_scanner_ddr_m_axi_U->RREADY(m_axi_ddr_RREADY);
    memory_scanner_ddr_m_axi_U->RDATA(m_axi_ddr_RDATA);
    memory_scanner_ddr_m_axi_U->RLAST(m_axi_ddr_RLAST);
    memory_scanner_ddr_m_axi_U->RID(m_axi_ddr_RID);
    memory_scanner_ddr_m_axi_U->RUSER(m_axi_ddr_RUSER);
    memory_scanner_ddr_m_axi_U->RRESP(m_axi_ddr_RRESP);
    memory_scanner_ddr_m_axi_U->BVALID(m_axi_ddr_BVALID);
    memory_scanner_ddr_m_axi_U->BREADY(m_axi_ddr_BREADY);
    memory_scanner_ddr_m_axi_U->BRESP(m_axi_ddr_BRESP);
    memory_scanner_ddr_m_axi_U->BID(m_axi_ddr_BID);
    memory_scanner_ddr_m_axi_U->BUSER(m_axi_ddr_BUSER);
    memory_scanner_ddr_m_axi_U->ACLK(ap_clk);
    memory_scanner_ddr_m_axi_U->ARESETN(ap_rst_n);
    memory_scanner_ddr_m_axi_U->I_ARVALID(ddr_ARVALID);
    memory_scanner_ddr_m_axi_U->I_ARREADY(ddr_ARREADY);
    memory_scanner_ddr_m_axi_U->I_ARADDR(ddr_ARADDR);
    memory_scanner_ddr_m_axi_U->I_ARID(ddr_ARID);
    memory_scanner_ddr_m_axi_U->I_ARLEN(ddr_ARLEN);
    memory_scanner_ddr_m_axi_U->I_ARSIZE(ddr_ARSIZE);
    memory_scanner_ddr_m_axi_U->I_ARLOCK(ddr_ARLOCK);
    memory_scanner_ddr_m_axi_U->I_ARCACHE(ddr_ARCACHE);
    memory_scanner_ddr_m_axi_U->I_ARQOS(ddr_ARQOS);
    memory_scanner_ddr_m_axi_U->I_ARPROT(ddr_ARPROT);
    memory_scanner_ddr_m_axi_U->I_ARUSER(ddr_ARUSER);
    memory_scanner_ddr_m_axi_U->I_ARBURST(ddr_ARBURST);
    memory_scanner_ddr_m_axi_U->I_ARREGION(ddr_ARREGION);
    memory_scanner_ddr_m_axi_U->I_RVALID(ddr_RVALID);
    memory_scanner_ddr_m_axi_U->I_RREADY(ddr_RREADY);
    memory_scanner_ddr_m_axi_U->I_RDATA(ddr_RDATA);
    memory_scanner_ddr_m_axi_U->I_RID(ddr_RID);
    memory_scanner_ddr_m_axi_U->I_RUSER(ddr_RUSER);
    memory_scanner_ddr_m_axi_U->I_RRESP(ddr_RRESP);
    memory_scanner_ddr_m_axi_U->I_RLAST(ddr_RLAST);
    memory_scanner_ddr_m_axi_U->I_AWVALID(ddr_AWVALID);
    memory_scanner_ddr_m_axi_U->I_AWREADY(ddr_AWREADY);
    memory_scanner_ddr_m_axi_U->I_AWADDR(ddr_AWADDR);
    memory_scanner_ddr_m_axi_U->I_AWID(ddr_AWID);
    memory_scanner_ddr_m_axi_U->I_AWLEN(ddr_AWLEN);
    memory_scanner_ddr_m_axi_U->I_AWSIZE(ddr_AWSIZE);
    memory_scanner_ddr_m_axi_U->I_AWLOCK(ddr_AWLOCK);
    memory_scanner_ddr_m_axi_U->I_AWCACHE(ddr_AWCACHE);
    memory_scanner_ddr_m_axi_U->I_AWQOS(ddr_AWQOS);
    memory_scanner_ddr_m_axi_U->I_AWPROT(ddr_AWPROT);
    memory_scanner_ddr_m_axi_U->I_AWUSER(ddr_AWUSER);
    memory_scanner_ddr_m_axi_U->I_AWBURST(ddr_AWBURST);
    memory_scanner_ddr_m_axi_U->I_AWREGION(ddr_AWREGION);
    memory_scanner_ddr_m_axi_U->I_WVALID(ddr_WVALID);
    memory_scanner_ddr_m_axi_U->I_WREADY(ddr_WREADY);
    memory_scanner_ddr_m_axi_U->I_WDATA(ddr_WDATA);
    memory_scanner_ddr_m_axi_U->I_WID(ddr_WID);
    memory_scanner_ddr_m_axi_U->I_WUSER(ddr_WUSER);
    memory_scanner_ddr_m_axi_U->I_WLAST(ddr_WLAST);
    memory_scanner_ddr_m_axi_U->I_WSTRB(ddr_WSTRB);
    memory_scanner_ddr_m_axi_U->I_BVALID(ddr_BVALID);
    memory_scanner_ddr_m_axi_U->I_BREADY(ddr_BREADY);
    memory_scanner_ddr_m_axi_U->I_BRESP(ddr_BRESP);
    memory_scanner_ddr_m_axi_U->I_BID(ddr_BID);
    memory_scanner_ddr_m_axi_U->I_BUSER(ddr_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_ddr_ARREADY );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_ddr_ARREADY );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_ddr_ARREADY );

    SC_METHOD(thread_ap_sig_bdd_366);
    sensitive << ( search_string_0_ap_vld );
    sensitive << ( search_string_1_ap_vld );
    sensitive << ( search_string_2_ap_vld );
    sensitive << ( search_string_3_ap_vld );
    sensitive << ( search_string_4_ap_vld );
    sensitive << ( search_string_5_ap_vld );
    sensitive << ( search_string_6_ap_vld );
    sensitive << ( search_string_7_ap_vld );
    sensitive << ( search_string_8_ap_vld );
    sensitive << ( search_string_9_ap_vld );
    sensitive << ( search_string_10_ap_vld );
    sensitive << ( search_string_11_ap_vld );
    sensitive << ( search_string_12_ap_vld );
    sensitive << ( search_string_13_ap_vld );
    sensitive << ( search_string_14_ap_vld );
    sensitive << ( search_string_15_ap_vld );
    sensitive << ( search_string_16_ap_vld );
    sensitive << ( ddr_RVALID );
    sensitive << ( tmp_2_fu_362_p1 );

    SC_METHOD(thread_ap_sig_bdd_369);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_ap_sig_bdd_444);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );

    SC_METHOD(thread_ap_sig_ioackin_ddr_ARREADY);
    sensitive << ( ddr_ARREADY );
    sensitive << ( ap_reg_ioackin_ddr_ARREADY );

    SC_METHOD(thread_count_0_1_fu_407_p3);
    sensitive << ( count_reg_251 );
    sensitive << ( icmp_fu_395_p2 );
    sensitive << ( count_0_fu_401_p2 );

    SC_METHOD(thread_count_0_2_fu_423_p3);
    sensitive << ( tmp_reg_275 );
    sensitive << ( icmp_fu_395_p2 );
    sensitive << ( count_0_fu_401_p2 );

    SC_METHOD(thread_count_0_fu_401_p2);
    sensitive << ( count_reg_251 );

    SC_METHOD(thread_count_out);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_ddr_ARREADY );
    sensitive << ( tmp_reg_275 );

    SC_METHOD(thread_count_out_ap_vld);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );

    SC_METHOD(thread_ddr_ARADDR);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( tmp_1_fu_351_p1 );
    sensitive << ( ap_reg_ioackin_ddr_ARREADY );

    SC_METHOD(thread_ddr_ARBURST);

    SC_METHOD(thread_ddr_ARCACHE);

    SC_METHOD(thread_ddr_ARID);

    SC_METHOD(thread_ddr_ARLEN);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_reg_ioackin_ddr_ARREADY );

    SC_METHOD(thread_ddr_ARLOCK);

    SC_METHOD(thread_ddr_ARPROT);

    SC_METHOD(thread_ddr_ARQOS);

    SC_METHOD(thread_ddr_ARREGION);

    SC_METHOD(thread_ddr_ARSIZE);

    SC_METHOD(thread_ddr_ARUSER);

    SC_METHOD(thread_ddr_ARVALID);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_reg_ioackin_ddr_ARREADY );

    SC_METHOD(thread_ddr_AWADDR);

    SC_METHOD(thread_ddr_AWBURST);

    SC_METHOD(thread_ddr_AWCACHE);

    SC_METHOD(thread_ddr_AWID);

    SC_METHOD(thread_ddr_AWLEN);

    SC_METHOD(thread_ddr_AWLOCK);

    SC_METHOD(thread_ddr_AWPROT);

    SC_METHOD(thread_ddr_AWQOS);

    SC_METHOD(thread_ddr_AWREGION);

    SC_METHOD(thread_ddr_AWSIZE);

    SC_METHOD(thread_ddr_AWUSER);

    SC_METHOD(thread_ddr_AWVALID);

    SC_METHOD(thread_ddr_BREADY);

    SC_METHOD(thread_ddr_RREADY);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_ddr_WDATA);

    SC_METHOD(thread_ddr_WID);

    SC_METHOD(thread_ddr_WLAST);

    SC_METHOD(thread_ddr_WSTRB);

    SC_METHOD(thread_ddr_WUSER);

    SC_METHOD(thread_ddr_WVALID);

    SC_METHOD(thread_exitcond1_fu_339_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_ddr_ARREADY );
    sensitive << ( j_reg_288 );

    SC_METHOD(thread_icmp_fu_395_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_5_fu_385_p4 );

    SC_METHOD(thread_search_index_0_1_fu_415_p3);
    sensitive << ( search_index_0_fu_377_p3 );
    sensitive << ( icmp_fu_395_p2 );

    SC_METHOD(thread_search_index_0_fu_377_p3);
    sensitive << ( tmp_3_fu_366_p2 );
    sensitive << ( tmp_4_fu_371_p2 );

    SC_METHOD(thread_search_string_0_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_10_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_11_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_12_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_13_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_14_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_15_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_16_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_1_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_2_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_3_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_4_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_5_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_6_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_7_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_8_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_search_string_9_ap_ack);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_2_fu_362_p1 );
    sensitive << ( ap_sig_bdd_366 );

    SC_METHOD(thread_tmp_1_fu_351_p1);
    sensitive << ( j_reg_288 );

    SC_METHOD(thread_tmp_2_fu_362_p1);
    sensitive << ( search_index_reg_263 );

    SC_METHOD(thread_tmp_3_fu_366_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ddr_addr_read_reg_445 );
    sensitive << ( search_string_load_phi_reg_299 );

    SC_METHOD(thread_tmp_4_fu_371_p2);
    sensitive << ( search_index_reg_263 );

    SC_METHOD(thread_tmp_5_fu_385_p4);
    sensitive << ( search_index_0_fu_377_p3 );

    SC_METHOD(thread_tmp_8_fu_345_p2);
    sensitive << ( j_reg_288 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_339_p2 );
    sensitive << ( ap_sig_ioackin_ddr_ARREADY );
    sensitive << ( ap_sig_bdd_366 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00";
    ap_reg_ioackin_ddr_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "memory_scanner_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_ddr_AWVALID, "(port)m_axi_ddr_AWVALID");
    sc_trace(mVcdFile, m_axi_ddr_AWREADY, "(port)m_axi_ddr_AWREADY");
    sc_trace(mVcdFile, m_axi_ddr_AWADDR, "(port)m_axi_ddr_AWADDR");
    sc_trace(mVcdFile, m_axi_ddr_AWID, "(port)m_axi_ddr_AWID");
    sc_trace(mVcdFile, m_axi_ddr_AWLEN, "(port)m_axi_ddr_AWLEN");
    sc_trace(mVcdFile, m_axi_ddr_AWSIZE, "(port)m_axi_ddr_AWSIZE");
    sc_trace(mVcdFile, m_axi_ddr_AWBURST, "(port)m_axi_ddr_AWBURST");
    sc_trace(mVcdFile, m_axi_ddr_AWLOCK, "(port)m_axi_ddr_AWLOCK");
    sc_trace(mVcdFile, m_axi_ddr_AWCACHE, "(port)m_axi_ddr_AWCACHE");
    sc_trace(mVcdFile, m_axi_ddr_AWPROT, "(port)m_axi_ddr_AWPROT");
    sc_trace(mVcdFile, m_axi_ddr_AWQOS, "(port)m_axi_ddr_AWQOS");
    sc_trace(mVcdFile, m_axi_ddr_AWREGION, "(port)m_axi_ddr_AWREGION");
    sc_trace(mVcdFile, m_axi_ddr_AWUSER, "(port)m_axi_ddr_AWUSER");
    sc_trace(mVcdFile, m_axi_ddr_WVALID, "(port)m_axi_ddr_WVALID");
    sc_trace(mVcdFile, m_axi_ddr_WREADY, "(port)m_axi_ddr_WREADY");
    sc_trace(mVcdFile, m_axi_ddr_WDATA, "(port)m_axi_ddr_WDATA");
    sc_trace(mVcdFile, m_axi_ddr_WSTRB, "(port)m_axi_ddr_WSTRB");
    sc_trace(mVcdFile, m_axi_ddr_WLAST, "(port)m_axi_ddr_WLAST");
    sc_trace(mVcdFile, m_axi_ddr_WID, "(port)m_axi_ddr_WID");
    sc_trace(mVcdFile, m_axi_ddr_WUSER, "(port)m_axi_ddr_WUSER");
    sc_trace(mVcdFile, m_axi_ddr_ARVALID, "(port)m_axi_ddr_ARVALID");
    sc_trace(mVcdFile, m_axi_ddr_ARREADY, "(port)m_axi_ddr_ARREADY");
    sc_trace(mVcdFile, m_axi_ddr_ARADDR, "(port)m_axi_ddr_ARADDR");
    sc_trace(mVcdFile, m_axi_ddr_ARID, "(port)m_axi_ddr_ARID");
    sc_trace(mVcdFile, m_axi_ddr_ARLEN, "(port)m_axi_ddr_ARLEN");
    sc_trace(mVcdFile, m_axi_ddr_ARSIZE, "(port)m_axi_ddr_ARSIZE");
    sc_trace(mVcdFile, m_axi_ddr_ARBURST, "(port)m_axi_ddr_ARBURST");
    sc_trace(mVcdFile, m_axi_ddr_ARLOCK, "(port)m_axi_ddr_ARLOCK");
    sc_trace(mVcdFile, m_axi_ddr_ARCACHE, "(port)m_axi_ddr_ARCACHE");
    sc_trace(mVcdFile, m_axi_ddr_ARPROT, "(port)m_axi_ddr_ARPROT");
    sc_trace(mVcdFile, m_axi_ddr_ARQOS, "(port)m_axi_ddr_ARQOS");
    sc_trace(mVcdFile, m_axi_ddr_ARREGION, "(port)m_axi_ddr_ARREGION");
    sc_trace(mVcdFile, m_axi_ddr_ARUSER, "(port)m_axi_ddr_ARUSER");
    sc_trace(mVcdFile, m_axi_ddr_RVALID, "(port)m_axi_ddr_RVALID");
    sc_trace(mVcdFile, m_axi_ddr_RREADY, "(port)m_axi_ddr_RREADY");
    sc_trace(mVcdFile, m_axi_ddr_RDATA, "(port)m_axi_ddr_RDATA");
    sc_trace(mVcdFile, m_axi_ddr_RLAST, "(port)m_axi_ddr_RLAST");
    sc_trace(mVcdFile, m_axi_ddr_RID, "(port)m_axi_ddr_RID");
    sc_trace(mVcdFile, m_axi_ddr_RUSER, "(port)m_axi_ddr_RUSER");
    sc_trace(mVcdFile, m_axi_ddr_RRESP, "(port)m_axi_ddr_RRESP");
    sc_trace(mVcdFile, m_axi_ddr_BVALID, "(port)m_axi_ddr_BVALID");
    sc_trace(mVcdFile, m_axi_ddr_BREADY, "(port)m_axi_ddr_BREADY");
    sc_trace(mVcdFile, m_axi_ddr_BRESP, "(port)m_axi_ddr_BRESP");
    sc_trace(mVcdFile, m_axi_ddr_BID, "(port)m_axi_ddr_BID");
    sc_trace(mVcdFile, m_axi_ddr_BUSER, "(port)m_axi_ddr_BUSER");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, search_string_0, "search_string_0");
    sc_trace(mVcdFile, search_string_0_ap_vld, "search_string_0_ap_vld");
    sc_trace(mVcdFile, search_string_0_ap_ack, "search_string_0_ap_ack");
    sc_trace(mVcdFile, search_string_1, "search_string_1");
    sc_trace(mVcdFile, search_string_1_ap_vld, "search_string_1_ap_vld");
    sc_trace(mVcdFile, search_string_1_ap_ack, "search_string_1_ap_ack");
    sc_trace(mVcdFile, search_string_2, "search_string_2");
    sc_trace(mVcdFile, search_string_2_ap_vld, "search_string_2_ap_vld");
    sc_trace(mVcdFile, search_string_2_ap_ack, "search_string_2_ap_ack");
    sc_trace(mVcdFile, search_string_3, "search_string_3");
    sc_trace(mVcdFile, search_string_3_ap_vld, "search_string_3_ap_vld");
    sc_trace(mVcdFile, search_string_3_ap_ack, "search_string_3_ap_ack");
    sc_trace(mVcdFile, search_string_4, "search_string_4");
    sc_trace(mVcdFile, search_string_4_ap_vld, "search_string_4_ap_vld");
    sc_trace(mVcdFile, search_string_4_ap_ack, "search_string_4_ap_ack");
    sc_trace(mVcdFile, search_string_5, "search_string_5");
    sc_trace(mVcdFile, search_string_5_ap_vld, "search_string_5_ap_vld");
    sc_trace(mVcdFile, search_string_5_ap_ack, "search_string_5_ap_ack");
    sc_trace(mVcdFile, search_string_6, "search_string_6");
    sc_trace(mVcdFile, search_string_6_ap_vld, "search_string_6_ap_vld");
    sc_trace(mVcdFile, search_string_6_ap_ack, "search_string_6_ap_ack");
    sc_trace(mVcdFile, search_string_7, "search_string_7");
    sc_trace(mVcdFile, search_string_7_ap_vld, "search_string_7_ap_vld");
    sc_trace(mVcdFile, search_string_7_ap_ack, "search_string_7_ap_ack");
    sc_trace(mVcdFile, search_string_8, "search_string_8");
    sc_trace(mVcdFile, search_string_8_ap_vld, "search_string_8_ap_vld");
    sc_trace(mVcdFile, search_string_8_ap_ack, "search_string_8_ap_ack");
    sc_trace(mVcdFile, search_string_9, "search_string_9");
    sc_trace(mVcdFile, search_string_9_ap_vld, "search_string_9_ap_vld");
    sc_trace(mVcdFile, search_string_9_ap_ack, "search_string_9_ap_ack");
    sc_trace(mVcdFile, search_string_10, "search_string_10");
    sc_trace(mVcdFile, search_string_10_ap_vld, "search_string_10_ap_vld");
    sc_trace(mVcdFile, search_string_10_ap_ack, "search_string_10_ap_ack");
    sc_trace(mVcdFile, search_string_11, "search_string_11");
    sc_trace(mVcdFile, search_string_11_ap_vld, "search_string_11_ap_vld");
    sc_trace(mVcdFile, search_string_11_ap_ack, "search_string_11_ap_ack");
    sc_trace(mVcdFile, search_string_12, "search_string_12");
    sc_trace(mVcdFile, search_string_12_ap_vld, "search_string_12_ap_vld");
    sc_trace(mVcdFile, search_string_12_ap_ack, "search_string_12_ap_ack");
    sc_trace(mVcdFile, search_string_13, "search_string_13");
    sc_trace(mVcdFile, search_string_13_ap_vld, "search_string_13_ap_vld");
    sc_trace(mVcdFile, search_string_13_ap_ack, "search_string_13_ap_ack");
    sc_trace(mVcdFile, search_string_14, "search_string_14");
    sc_trace(mVcdFile, search_string_14_ap_vld, "search_string_14_ap_vld");
    sc_trace(mVcdFile, search_string_14_ap_ack, "search_string_14_ap_ack");
    sc_trace(mVcdFile, search_string_15, "search_string_15");
    sc_trace(mVcdFile, search_string_15_ap_vld, "search_string_15_ap_vld");
    sc_trace(mVcdFile, search_string_15_ap_ack, "search_string_15_ap_ack");
    sc_trace(mVcdFile, search_string_16, "search_string_16");
    sc_trace(mVcdFile, search_string_16_ap_vld, "search_string_16_ap_vld");
    sc_trace(mVcdFile, search_string_16_ap_ack, "search_string_16_ap_ack");
    sc_trace(mVcdFile, count_out, "count_out");
    sc_trace(mVcdFile, count_out_ap_vld, "count_out_ap_vld");
    sc_trace(mVcdFile, ap_return, "ap_return");
    sc_trace(mVcdFile, ddr_AWVALID, "ddr_AWVALID");
    sc_trace(mVcdFile, ddr_AWREADY, "ddr_AWREADY");
    sc_trace(mVcdFile, ddr_AWADDR, "ddr_AWADDR");
    sc_trace(mVcdFile, ddr_AWID, "ddr_AWID");
    sc_trace(mVcdFile, ddr_AWLEN, "ddr_AWLEN");
    sc_trace(mVcdFile, ddr_AWSIZE, "ddr_AWSIZE");
    sc_trace(mVcdFile, ddr_AWBURST, "ddr_AWBURST");
    sc_trace(mVcdFile, ddr_AWLOCK, "ddr_AWLOCK");
    sc_trace(mVcdFile, ddr_AWCACHE, "ddr_AWCACHE");
    sc_trace(mVcdFile, ddr_AWPROT, "ddr_AWPROT");
    sc_trace(mVcdFile, ddr_AWQOS, "ddr_AWQOS");
    sc_trace(mVcdFile, ddr_AWREGION, "ddr_AWREGION");
    sc_trace(mVcdFile, ddr_AWUSER, "ddr_AWUSER");
    sc_trace(mVcdFile, ddr_WVALID, "ddr_WVALID");
    sc_trace(mVcdFile, ddr_WREADY, "ddr_WREADY");
    sc_trace(mVcdFile, ddr_WDATA, "ddr_WDATA");
    sc_trace(mVcdFile, ddr_WSTRB, "ddr_WSTRB");
    sc_trace(mVcdFile, ddr_WLAST, "ddr_WLAST");
    sc_trace(mVcdFile, ddr_WID, "ddr_WID");
    sc_trace(mVcdFile, ddr_WUSER, "ddr_WUSER");
    sc_trace(mVcdFile, ddr_ARVALID, "ddr_ARVALID");
    sc_trace(mVcdFile, ddr_ARREADY, "ddr_ARREADY");
    sc_trace(mVcdFile, ddr_ARADDR, "ddr_ARADDR");
    sc_trace(mVcdFile, ddr_ARID, "ddr_ARID");
    sc_trace(mVcdFile, ddr_ARLEN, "ddr_ARLEN");
    sc_trace(mVcdFile, ddr_ARSIZE, "ddr_ARSIZE");
    sc_trace(mVcdFile, ddr_ARBURST, "ddr_ARBURST");
    sc_trace(mVcdFile, ddr_ARLOCK, "ddr_ARLOCK");
    sc_trace(mVcdFile, ddr_ARCACHE, "ddr_ARCACHE");
    sc_trace(mVcdFile, ddr_ARPROT, "ddr_ARPROT");
    sc_trace(mVcdFile, ddr_ARQOS, "ddr_ARQOS");
    sc_trace(mVcdFile, ddr_ARREGION, "ddr_ARREGION");
    sc_trace(mVcdFile, ddr_ARUSER, "ddr_ARUSER");
    sc_trace(mVcdFile, ddr_RVALID, "ddr_RVALID");
    sc_trace(mVcdFile, ddr_RREADY, "ddr_RREADY");
    sc_trace(mVcdFile, ddr_RDATA, "ddr_RDATA");
    sc_trace(mVcdFile, ddr_RLAST, "ddr_RLAST");
    sc_trace(mVcdFile, ddr_RID, "ddr_RID");
    sc_trace(mVcdFile, ddr_RUSER, "ddr_RUSER");
    sc_trace(mVcdFile, ddr_RRESP, "ddr_RRESP");
    sc_trace(mVcdFile, ddr_BVALID, "ddr_BVALID");
    sc_trace(mVcdFile, ddr_BREADY, "ddr_BREADY");
    sc_trace(mVcdFile, ddr_BRESP, "ddr_BRESP");
    sc_trace(mVcdFile, ddr_BID, "ddr_BID");
    sc_trace(mVcdFile, ddr_BUSER, "ddr_BUSER");
    sc_trace(mVcdFile, tmp_8_fu_345_p2, "tmp_8_fu_345_p2");
    sc_trace(mVcdFile, tmp_8_reg_434, "tmp_8_reg_434");
    sc_trace(mVcdFile, exitcond1_fu_339_p2, "exitcond1_fu_339_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_ddr_ARREADY, "ap_sig_ioackin_ddr_ARREADY");
    sc_trace(mVcdFile, ddr_addr_read_reg_445, "ddr_addr_read_reg_445");
    sc_trace(mVcdFile, tmp_2_fu_362_p1, "tmp_2_fu_362_p1");
    sc_trace(mVcdFile, ap_sig_bdd_366, "ap_sig_bdd_366");
    sc_trace(mVcdFile, count_0_1_fu_407_p3, "count_0_1_fu_407_p3");
    sc_trace(mVcdFile, search_index_0_1_fu_415_p3, "search_index_0_1_fu_415_p3");
    sc_trace(mVcdFile, count_0_2_fu_423_p3, "count_0_2_fu_423_p3");
    sc_trace(mVcdFile, count_reg_251, "count_reg_251");
    sc_trace(mVcdFile, search_index_reg_263, "search_index_reg_263");
    sc_trace(mVcdFile, tmp_reg_275, "tmp_reg_275");
    sc_trace(mVcdFile, j_reg_288, "j_reg_288");
    sc_trace(mVcdFile, search_string_load_phi_reg_299, "search_string_load_phi_reg_299");
    sc_trace(mVcdFile, tmp_1_fu_351_p1, "tmp_1_fu_351_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_ddr_ARREADY, "ap_reg_ioackin_ddr_ARREADY");
    sc_trace(mVcdFile, tmp_3_fu_366_p2, "tmp_3_fu_366_p2");
    sc_trace(mVcdFile, tmp_4_fu_371_p2, "tmp_4_fu_371_p2");
    sc_trace(mVcdFile, search_index_0_fu_377_p3, "search_index_0_fu_377_p3");
    sc_trace(mVcdFile, tmp_5_fu_385_p4, "tmp_5_fu_385_p4");
    sc_trace(mVcdFile, icmp_fu_395_p2, "icmp_fu_395_p2");
    sc_trace(mVcdFile, count_0_fu_401_p2, "count_0_fu_401_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_bdd_444, "ap_sig_bdd_444");
    sc_trace(mVcdFile, ap_sig_bdd_369, "ap_sig_bdd_369");
#endif

    }
    mHdltvinHandle.open("memory_scanner.hdltvin.dat");
    mHdltvoutHandle.open("memory_scanner.hdltvout.dat");
}

memory_scanner::~memory_scanner() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete memory_scanner_AXILiteS_s_axi_U;
    delete memory_scanner_ddr_m_axi_U;
}

void memory_scanner::thread_ap_clk_no_reset_() {
    if ( ap_rst_n.read() == ap_const_logic_0) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n.read() == ap_const_logic_0) {
        ap_reg_ioackin_ddr_ARREADY = ap_const_logic_0;
    } else {
        if (ap_sig_bdd_444.read()) {
            if (!(esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_ddr_ARREADY.read()))) {
                ap_reg_ioackin_ddr_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, ddr_ARREADY.read())) {
                ap_reg_ioackin_ddr_ARREADY = ap_const_logic_1;
            }
        }
    }
    if (esl_seteq<1,2,2>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        count_reg_251 = count_0_1_fu_407_p3.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        count_reg_251 = ap_const_lv32_0;
    }
    if (esl_seteq<1,2,2>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        j_reg_288 = tmp_8_reg_434.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_288 = ap_const_lv31_0;
    }
    if (esl_seteq<1,2,2>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        search_index_reg_263 = search_index_0_1_fu_415_p3.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        search_index_reg_263 = ap_const_lv32_0;
    }
    if (ap_sig_bdd_369.read()) {
        if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_F)) {
            search_string_load_phi_reg_299 = search_string_15.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_E)) {
            search_string_load_phi_reg_299 = search_string_14.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_D)) {
            search_string_load_phi_reg_299 = search_string_13.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_C)) {
            search_string_load_phi_reg_299 = search_string_12.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_B)) {
            search_string_load_phi_reg_299 = search_string_11.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_A)) {
            search_string_load_phi_reg_299 = search_string_10.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_9)) {
            search_string_load_phi_reg_299 = search_string_9.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_8)) {
            search_string_load_phi_reg_299 = search_string_8.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_7)) {
            search_string_load_phi_reg_299 = search_string_7.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_6)) {
            search_string_load_phi_reg_299 = search_string_6.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_5)) {
            search_string_load_phi_reg_299 = search_string_5.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_4)) {
            search_string_load_phi_reg_299 = search_string_4.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_3)) {
            search_string_load_phi_reg_299 = search_string_3.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_2)) {
            search_string_load_phi_reg_299 = search_string_2.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_1)) {
            search_string_load_phi_reg_299 = search_string_1.read();
        } else if (esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_0)) {
            search_string_load_phi_reg_299 = search_string_0.read();
        } else if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            search_string_load_phi_reg_299 = search_string_16.read();
        }
    }
    if (esl_seteq<1,2,2>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        tmp_reg_275 = count_0_2_fu_423_p3.read();
    } else if ((esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_reg_275 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && !ap_sig_bdd_366.read())) {
        ddr_addr_read_reg_445 = ddr_RDATA.read();
    }
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && !(esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_ddr_ARREADY.read())))) {
        tmp_8_reg_434 = tmp_8_fu_345_p2.read();
    }
}

void memory_scanner::thread_ap_done() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !(esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_ddr_ARREADY.read())) && 
         !esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void memory_scanner::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void memory_scanner::thread_ap_ready() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !(esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_ddr_ARREADY.read())) && 
         !esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void memory_scanner::thread_ap_return() {
    ap_return = ap_const_lv1_1;
}

void memory_scanner::thread_ap_sig_bdd_366() {
    ap_sig_bdd_366 = (esl_seteq<1,1,1>(ddr_RVALID.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(search_string_15_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_F)) || (esl_seteq<1,1,1>(search_string_14_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_E)) || (esl_seteq<1,1,1>(search_string_13_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_D)) || (esl_seteq<1,1,1>(search_string_12_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_C)) || (esl_seteq<1,1,1>(search_string_11_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_B)) || (esl_seteq<1,1,1>(search_string_10_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_A)) || (esl_seteq<1,1,1>(search_string_9_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_9)) || (esl_seteq<1,1,1>(search_string_8_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_8)) || (esl_seteq<1,1,1>(search_string_7_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_7)) || (esl_seteq<1,1,1>(search_string_6_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_6)) || (esl_seteq<1,1,1>(search_string_5_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_5)) || (esl_seteq<1,1,1>(search_string_4_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_4)) || (esl_seteq<1,1,1>(search_string_3_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_3)) || (esl_seteq<1,1,1>(search_string_2_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_2)) || (esl_seteq<1,1,1>(search_string_1_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_1)) || (esl_seteq<1,1,1>(search_string_0_ap_vld.read(), ap_const_logic_0) && 
  esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_0)) || (esl_seteq<1,1,1>(search_string_16_ap_vld.read(), ap_const_logic_0) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_F) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_E) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_D) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_C) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_B) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_A) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_9) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_8) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_7) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_6) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_5) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_4) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_3) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_2) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_1) && 
  !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_0)));
}

void memory_scanner::thread_ap_sig_bdd_369() {
    ap_sig_bdd_369 = (esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && !ap_sig_bdd_366.read());
}

void memory_scanner::thread_ap_sig_bdd_444() {
    ap_sig_bdd_444 = (esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0));
}

void memory_scanner::thread_ap_sig_ioackin_ddr_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_ddr_ARREADY.read())) {
        ap_sig_ioackin_ddr_ARREADY = ddr_ARREADY.read();
    } else {
        ap_sig_ioackin_ddr_ARREADY = ap_const_logic_1;
    }
}

void memory_scanner::thread_count_0_1_fu_407_p3() {
    count_0_1_fu_407_p3 = (!icmp_fu_395_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_fu_395_p2.read()[0].to_bool())? count_0_fu_401_p2.read(): count_reg_251.read());
}

void memory_scanner::thread_count_0_2_fu_423_p3() {
    count_0_2_fu_423_p3 = (!icmp_fu_395_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_fu_395_p2.read()[0].to_bool())? count_0_fu_401_p2.read(): tmp_reg_275.read());
}

void memory_scanner::thread_count_0_fu_401_p2() {
    count_0_fu_401_p2 = (!count_reg_251.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(count_reg_251.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void memory_scanner::thread_count_out() {
    count_out = tmp_reg_275.read();
}

void memory_scanner::thread_count_out_ap_vld() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0))) {
        count_out_ap_vld = ap_const_logic_1;
    } else {
        count_out_ap_vld = ap_const_logic_0;
    }
}

void memory_scanner::thread_ddr_ARADDR() {
    ddr_ARADDR =  (sc_lv<32>) (tmp_1_fu_351_p1.read());
}

void memory_scanner::thread_ddr_ARBURST() {
    ddr_ARBURST = ap_const_lv2_0;
}

void memory_scanner::thread_ddr_ARCACHE() {
    ddr_ARCACHE = ap_const_lv4_0;
}

void memory_scanner::thread_ddr_ARID() {
    ddr_ARID = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_ARLEN() {
    ddr_ARLEN = ap_const_lv32_1;
}

void memory_scanner::thread_ddr_ARLOCK() {
    ddr_ARLOCK = ap_const_lv2_0;
}

void memory_scanner::thread_ddr_ARPROT() {
    ddr_ARPROT = ap_const_lv3_0;
}

void memory_scanner::thread_ddr_ARQOS() {
    ddr_ARQOS = ap_const_lv4_0;
}

void memory_scanner::thread_ddr_ARREGION() {
    ddr_ARREGION = ap_const_lv4_0;
}

void memory_scanner::thread_ddr_ARSIZE() {
    ddr_ARSIZE = ap_const_lv3_0;
}

void memory_scanner::thread_ddr_ARUSER() {
    ddr_ARUSER = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_ARVALID() {
    if ((esl_seteq<1,2,2>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_ddr_ARREADY.read()))) {
        ddr_ARVALID = ap_const_logic_1;
    } else {
        ddr_ARVALID = ap_const_logic_0;
    }
}

void memory_scanner::thread_ddr_AWADDR() {
    ddr_AWADDR = ap_const_lv32_0;
}

void memory_scanner::thread_ddr_AWBURST() {
    ddr_AWBURST = ap_const_lv2_0;
}

void memory_scanner::thread_ddr_AWCACHE() {
    ddr_AWCACHE = ap_const_lv4_0;
}

void memory_scanner::thread_ddr_AWID() {
    ddr_AWID = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_AWLEN() {
    ddr_AWLEN = ap_const_lv32_0;
}

void memory_scanner::thread_ddr_AWLOCK() {
    ddr_AWLOCK = ap_const_lv2_0;
}

void memory_scanner::thread_ddr_AWPROT() {
    ddr_AWPROT = ap_const_lv3_0;
}

void memory_scanner::thread_ddr_AWQOS() {
    ddr_AWQOS = ap_const_lv4_0;
}

void memory_scanner::thread_ddr_AWREGION() {
    ddr_AWREGION = ap_const_lv4_0;
}

void memory_scanner::thread_ddr_AWSIZE() {
    ddr_AWSIZE = ap_const_lv3_0;
}

void memory_scanner::thread_ddr_AWUSER() {
    ddr_AWUSER = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_AWVALID() {
    ddr_AWVALID = ap_const_logic_0;
}

void memory_scanner::thread_ddr_BREADY() {
    ddr_BREADY = ap_const_logic_0;
}

void memory_scanner::thread_ddr_RREADY() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         !ap_sig_bdd_366.read())) {
        ddr_RREADY = ap_const_logic_1;
    } else {
        ddr_RREADY = ap_const_logic_0;
    }
}

void memory_scanner::thread_ddr_WDATA() {
    ddr_WDATA = ap_const_lv8_0;
}

void memory_scanner::thread_ddr_WID() {
    ddr_WID = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_WLAST() {
    ddr_WLAST = ap_const_logic_0;
}

void memory_scanner::thread_ddr_WSTRB() {
    ddr_WSTRB = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_WUSER() {
    ddr_WUSER = ap_const_lv1_0;
}

void memory_scanner::thread_ddr_WVALID() {
    ddr_WVALID = ap_const_logic_0;
}

void memory_scanner::thread_exitcond1_fu_339_p2() {
    exitcond1_fu_339_p2 = (!j_reg_288.read().is_01() || !ap_const_lv31_40000000.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_288.read() == ap_const_lv31_40000000);
}

void memory_scanner::thread_icmp_fu_395_p2() {
    icmp_fu_395_p2 = (!tmp_5_fu_385_p4.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): (sc_bigint<28>(tmp_5_fu_385_p4.read()) > sc_bigint<28>(ap_const_lv28_0));
}

void memory_scanner::thread_search_index_0_1_fu_415_p3() {
    search_index_0_1_fu_415_p3 = (!icmp_fu_395_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_fu_395_p2.read()[0].to_bool())? ap_const_lv32_0: search_index_0_fu_377_p3.read());
}

void memory_scanner::thread_search_index_0_fu_377_p3() {
    search_index_0_fu_377_p3 = (!tmp_3_fu_366_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_366_p2.read()[0].to_bool())? tmp_4_fu_371_p2.read(): ap_const_lv32_0);
}

void memory_scanner::thread_search_string_0_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_0) && 
         !ap_sig_bdd_366.read())) {
        search_string_0_ap_ack = ap_const_logic_1;
    } else {
        search_string_0_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_10_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_A) && 
         !ap_sig_bdd_366.read())) {
        search_string_10_ap_ack = ap_const_logic_1;
    } else {
        search_string_10_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_11_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_B) && 
         !ap_sig_bdd_366.read())) {
        search_string_11_ap_ack = ap_const_logic_1;
    } else {
        search_string_11_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_12_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_C) && 
         !ap_sig_bdd_366.read())) {
        search_string_12_ap_ack = ap_const_logic_1;
    } else {
        search_string_12_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_13_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_D) && 
         !ap_sig_bdd_366.read())) {
        search_string_13_ap_ack = ap_const_logic_1;
    } else {
        search_string_13_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_14_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_E) && 
         !ap_sig_bdd_366.read())) {
        search_string_14_ap_ack = ap_const_logic_1;
    } else {
        search_string_14_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_15_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_F) && 
         !ap_sig_bdd_366.read())) {
        search_string_15_ap_ack = ap_const_logic_1;
    } else {
        search_string_15_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_16_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_F) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_E) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_D) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_C) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_B) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_A) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_9) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_8) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_7) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_6) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_5) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_4) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_3) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_2) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_1) && 
         !esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_0) && 
         !ap_sig_bdd_366.read())) {
        search_string_16_ap_ack = ap_const_logic_1;
    } else {
        search_string_16_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_1_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_1) && 
         !ap_sig_bdd_366.read())) {
        search_string_1_ap_ack = ap_const_logic_1;
    } else {
        search_string_1_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_2_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_2) && 
         !ap_sig_bdd_366.read())) {
        search_string_2_ap_ack = ap_const_logic_1;
    } else {
        search_string_2_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_3_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_3) && 
         !ap_sig_bdd_366.read())) {
        search_string_3_ap_ack = ap_const_logic_1;
    } else {
        search_string_3_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_4_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_4) && 
         !ap_sig_bdd_366.read())) {
        search_string_4_ap_ack = ap_const_logic_1;
    } else {
        search_string_4_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_5_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_5) && 
         !ap_sig_bdd_366.read())) {
        search_string_5_ap_ack = ap_const_logic_1;
    } else {
        search_string_5_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_6_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_6) && 
         !ap_sig_bdd_366.read())) {
        search_string_6_ap_ack = ap_const_logic_1;
    } else {
        search_string_6_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_7_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_7) && 
         !ap_sig_bdd_366.read())) {
        search_string_7_ap_ack = ap_const_logic_1;
    } else {
        search_string_7_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_8_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_8) && 
         !ap_sig_bdd_366.read())) {
        search_string_8_ap_ack = ap_const_logic_1;
    } else {
        search_string_8_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_search_string_9_ap_ack() {
    if ((esl_seteq<1,2,2>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         esl_seteq<1,5,5>(tmp_2_fu_362_p1.read(), ap_const_lv5_9) && 
         !ap_sig_bdd_366.read())) {
        search_string_9_ap_ack = ap_const_logic_1;
    } else {
        search_string_9_ap_ack = ap_const_logic_0;
    }
}

void memory_scanner::thread_tmp_1_fu_351_p1() {
    tmp_1_fu_351_p1 = esl_zext<64,31>(j_reg_288.read());
}

void memory_scanner::thread_tmp_2_fu_362_p1() {
    tmp_2_fu_362_p1 = search_index_reg_263.read().range(5-1, 0);
}

void memory_scanner::thread_tmp_3_fu_366_p2() {
    tmp_3_fu_366_p2 = (!ddr_addr_read_reg_445.read().is_01() || !search_string_load_phi_reg_299.read().is_01())? sc_lv<1>(): sc_lv<1>(ddr_addr_read_reg_445.read() == search_string_load_phi_reg_299.read());
}

void memory_scanner::thread_tmp_4_fu_371_p2() {
    tmp_4_fu_371_p2 = (!search_index_reg_263.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(search_index_reg_263.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void memory_scanner::thread_tmp_5_fu_385_p4() {
    tmp_5_fu_385_p4 = search_index_0_fu_377_p3.read().range(31, 4);
}

void memory_scanner::thread_tmp_8_fu_345_p2() {
    tmp_8_fu_345_p2 = (!j_reg_288.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_bigint<31>(j_reg_288.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void memory_scanner::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if ((!(esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_ddr_ARREADY.read())) && !esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond1_fu_339_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_ddr_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 2 : 
            if (!ap_sig_bdd_366.read()) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}
void memory_scanner::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWVALID\" :  \"" << m_axi_ddr_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_AWREADY\" :  \"" << m_axi_ddr_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWADDR\" :  \"" << m_axi_ddr_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWID\" :  \"" << m_axi_ddr_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWLEN\" :  \"" << m_axi_ddr_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWSIZE\" :  \"" << m_axi_ddr_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWBURST\" :  \"" << m_axi_ddr_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWLOCK\" :  \"" << m_axi_ddr_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWCACHE\" :  \"" << m_axi_ddr_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWPROT\" :  \"" << m_axi_ddr_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWQOS\" :  \"" << m_axi_ddr_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWREGION\" :  \"" << m_axi_ddr_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_AWUSER\" :  \"" << m_axi_ddr_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_WVALID\" :  \"" << m_axi_ddr_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_WREADY\" :  \"" << m_axi_ddr_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_WDATA\" :  \"" << m_axi_ddr_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_WSTRB\" :  \"" << m_axi_ddr_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_WLAST\" :  \"" << m_axi_ddr_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_WID\" :  \"" << m_axi_ddr_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_WUSER\" :  \"" << m_axi_ddr_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARVALID\" :  \"" << m_axi_ddr_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_ARREADY\" :  \"" << m_axi_ddr_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARADDR\" :  \"" << m_axi_ddr_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARID\" :  \"" << m_axi_ddr_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARLEN\" :  \"" << m_axi_ddr_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARSIZE\" :  \"" << m_axi_ddr_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARBURST\" :  \"" << m_axi_ddr_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARLOCK\" :  \"" << m_axi_ddr_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARCACHE\" :  \"" << m_axi_ddr_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARPROT\" :  \"" << m_axi_ddr_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARQOS\" :  \"" << m_axi_ddr_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARREGION\" :  \"" << m_axi_ddr_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_ARUSER\" :  \"" << m_axi_ddr_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_RVALID\" :  \"" << m_axi_ddr_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_RREADY\" :  \"" << m_axi_ddr_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_RDATA\" :  \"" << m_axi_ddr_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_RLAST\" :  \"" << m_axi_ddr_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_RID\" :  \"" << m_axi_ddr_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_RUSER\" :  \"" << m_axi_ddr_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_RRESP\" :  \"" << m_axi_ddr_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_BVALID\" :  \"" << m_axi_ddr_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_ddr_BREADY\" :  \"" << m_axi_ddr_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_BRESP\" :  \"" << m_axi_ddr_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_BID\" :  \"" << m_axi_ddr_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_ddr_BUSER\" :  \"" << m_axi_ddr_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

