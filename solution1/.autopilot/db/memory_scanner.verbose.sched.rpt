

================================================================
== Vivado HLS Report for 'memory_scanner'
================================================================
* Date:           Tue Jan 19 04:37:08 2016

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        memory_scanner
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      8.75|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------------+------------+------------+------------+---------+
    |         Latency         |         Interval        | Pipeline|
    |     min    |     max    |     min    |     max    |   Type  |
    +------------+------------+------------+------------+---------+
    |  4026531858|  4026531858|  4026531859|  4026531859|   none  |
    +------------+------------+------------+------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------------+------------+----------+-----------+-----------+-----------+----------+
        |             |         Latency         | Iteration|  Initiation Interval  |    Trip   |          |
        |  Loop Name  |     min    |     max    |  Latency |  achieved |   target  |   Count   | Pipelined|
        +-------------+------------+------------+----------+-----------+-----------+-----------+----------+
        |- Loop 1     |  4026531840|  4026531840|        15|          -|          -|  268435456|    no    |
        | + Loop 1.1  |           4|           4|         1|          -|          -|          4|    no    |
        | + Loop 1.2  |           8|           8|         2|          -|          -|          4|    no    |
        +-------------+------------+------------+----------+-----------+-----------+-----------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+---------+--------------+---------+
|        RTL Ports       | Dir | Bits| Protocol| Source Object|  C Type |
+------------------------+-----+-----+---------+--------------+---------+
|s_axi_AXILiteS_AWVALID  |  in |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_AWREADY  | out |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_AWADDR   |  in |    8|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_WVALID   |  in |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_WREADY   | out |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_WDATA    |  in |   32|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_WSTRB    |  in |    4|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_ARVALID  |  in |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_ARREADY  | out |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_ARADDR   |  in |    8|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_RVALID   | out |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_RREADY   |  in |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_RDATA    | out |   32|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_RRESP    | out |    2|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_BVALID   | out |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_BREADY   |  in |    1|  s_axi  |   AXILiteS   | pointer |
|s_axi_AXILiteS_BRESP    | out |    2|  s_axi  |   AXILiteS   | pointer |
+------------------------+-----+-----+---------+--------------+---------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 22
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / (!exitcond1)
20 --> 
	21  / (exitcond_i)
	20  / (!exitcond_i)
21 --> 
	22  / (!exitcond)
	19  / (exitcond)
22 --> 
	21  / true
* FSM state operations: 

 <State 1>: 8.75ns
ST_1: p_req9 [2/2] 8.75ns
:34  %p_req9 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 2>: 8.75ns
ST_2: p_req9 [1/2] 8.75ns
:34  %p_req9 = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 3>: 8.75ns
ST_3: m_mm2s_ctl_req7 [1/1] 8.75ns
:36  %m_mm2s_ctl_req7 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_3: stg_26 [1/1] 8.75ns
:37  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 0)

ST_3: m_mm2s_ctl_resp8 [2/2] 8.75ns
:38  %m_mm2s_ctl_resp8 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)


 <State 4>: 8.75ns
ST_4: empty [1/1] 8.75ns
:35  %empty = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_4: m_mm2s_ctl_resp8 [1/2] 8.75ns
:38  %m_mm2s_ctl_resp8 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_4: m_mm2s_ctl_load_req [2/2] 8.75ns
:39  %m_mm2s_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 5>: 8.75ns
ST_5: m_mm2s_ctl_load_req [1/2] 8.75ns
:39  %m_mm2s_ctl_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_5: m_mm2s_ctl_read [1/1] 8.75ns
:40  %m_mm2s_ctl_read = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_5: tmp_1 [1/1] 0.00ns
:41  %tmp_1 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %m_mm2s_ctl_read, i32 3, i32 31)

ST_5: tmp_3 [1/1] 0.00ns
:42  %tmp_3 = trunc i32 %m_mm2s_ctl_read to i2


 <State 6>: 8.75ns
ST_6: m_mm2s_ctl_assign [1/1] 0.00ns
:43  %m_mm2s_ctl_assign = call i32 @_ssdm_op_BitConcatenate.i32.i29.i1.i2(i29 %tmp_1, i1 true, i2 %tmp_3)

ST_6: m_mm2s_ctl_req5 [1/1] 8.75ns
:44  %m_mm2s_ctl_req5 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_6: stg_37 [1/1] 8.75ns
:45  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %m_mm2s_ctl_assign)

ST_6: m_mm2s_ctl_resp6 [2/2] 8.75ns
:46  %m_mm2s_ctl_resp6 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)


 <State 7>: 8.75ns
ST_7: m_mm2s_ctl_resp6 [1/2] 8.75ns
:46  %m_mm2s_ctl_resp6 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_7: p_req [2/2] 8.75ns
:47  %p_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 8>: 8.75ns
ST_8: p_req [1/2] 8.75ns
:47  %p_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 9>: 8.75ns
ST_9: m_mm2s_ctl_req3 [1/1] 8.75ns
:49  %m_mm2s_ctl_req3 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_9: stg_43 [1/1] 8.75ns
:50  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 0)

ST_9: m_mm2s_ctl_resp4 [2/2] 8.75ns
:51  %m_mm2s_ctl_resp4 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)


 <State 10>: 8.75ns
ST_10: empty_55 [1/1] 8.75ns
:48  %empty_55 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_10: m_mm2s_ctl_resp4 [1/2] 8.75ns
:51  %m_mm2s_ctl_resp4 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_10: m_mm2s_ctl_load_1_req [2/2] 8.75ns
:52  %m_mm2s_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 11>: 8.75ns
ST_11: m_mm2s_ctl_load_1_req [1/2] 8.75ns
:52  %m_mm2s_ctl_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_11: m_mm2s_ctl_read_1 [1/1] 8.75ns
:53  %m_mm2s_ctl_read_1 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_11: tmp_4 [1/1] 0.00ns
:54  %tmp_4 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_mm2s_ctl_read_1, i32 1, i32 31)


 <State 12>: 8.75ns
ST_12: m_mm2s_ctl_assign_1 [1/1] 0.00ns
:55  %m_mm2s_ctl_assign_1 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_4, i1 true)

ST_12: m_mm2s_ctl_req1 [1/1] 8.75ns
:56  %m_mm2s_ctl_req1 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_12: stg_53 [1/1] 8.75ns
:57  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %m_mm2s_ctl_assign_1)

ST_12: m_mm2s_ctl_resp2 [2/2] 8.75ns
:58  %m_mm2s_ctl_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)


 <State 13>: 8.75ns
ST_13: m_mm2s_ctl_resp2 [1/2] 8.75ns
:58  %m_mm2s_ctl_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_13: m_mm2s_ctl_load_2_req [2/2] 8.75ns
:59  %m_mm2s_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)


 <State 14>: 8.75ns
ST_14: m_mm2s_ctl_load_2_req [1/2] 8.75ns
:59  %m_mm2s_ctl_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_14: m_mm2s_ctl_read_2 [1/1] 8.75ns
:60  %m_mm2s_ctl_read_2 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %m_mm2s_ctl)

ST_14: tmp_5 [1/1] 0.00ns
:61  %tmp_5 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %m_mm2s_ctl_read_2, i32 13, i32 31)

ST_14: tmp_6 [1/1] 0.00ns
:62  %tmp_6 = trunc i32 %m_mm2s_ctl_read_2 to i12


 <State 15>: 8.75ns
ST_15: m_mm2s_ctl_assign_2 [1/1] 0.00ns
:63  %m_mm2s_ctl_assign_2 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i1.i12(i19 %tmp_5, i1 true, i12 %tmp_6)

ST_15: m_mm2s_ctl_req [1/1] 8.75ns
:64  %m_mm2s_ctl_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl, i32 1)

ST_15: stg_63 [1/1] 8.75ns
:65  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl, i32 %m_mm2s_ctl_assign_2)

ST_15: m_mm2s_ctl_resp [2/2] 8.75ns
:66  %m_mm2s_ctl_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)


 <State 16>: 8.75ns
ST_16: m_mm2s_ctl_resp [1/2] 8.75ns
:66  %m_mm2s_ctl_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl)

ST_16: m_mm2s_ctl_addr [1/1] 0.00ns
:67  %m_mm2s_ctl_addr = getelementptr i32* %m_mm2s_ctl, i64 6

ST_16: m_mm2s_ctl_addr_req [1/1] 8.75ns
:68  %m_mm2s_ctl_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl_addr, i32 1)

ST_16: stg_68 [1/1] 8.75ns
:69  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl_addr, i32 0)

ST_16: m_mm2s_ctl_addr_resp [2/2] 8.75ns
:70  %m_mm2s_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr)


 <State 17>: 8.75ns
ST_17: m_mm2s_ctl_addr_resp [1/2] 8.75ns
:70  %m_mm2s_ctl_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr)

ST_17: m_mm2s_ctl_addr_1 [1/1] 0.00ns
:71  %m_mm2s_ctl_addr_1 = getelementptr i32* %m_mm2s_ctl, i64 10

ST_17: m_mm2s_ctl_addr_1_req [1/1] 8.75ns
:72  %m_mm2s_ctl_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %m_mm2s_ctl_addr_1, i32 1)

ST_17: stg_73 [1/1] 8.75ns
:73  call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %m_mm2s_ctl_addr_1, i32 1073741824)

ST_17: m_mm2s_ctl_addr_1_resp [2/2] 8.75ns
:74  %m_mm2s_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr_1)


 <State 18>: 8.75ns
ST_18: stg_75 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_16), !map !7

ST_18: stg_76 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_15), !map !13

ST_18: stg_77 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_14), !map !19

ST_18: stg_78 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_13), !map !25

ST_18: stg_79 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_12), !map !31

ST_18: stg_80 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_11), !map !37

ST_18: stg_81 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_10), !map !43

ST_18: stg_82 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_9), !map !49

ST_18: stg_83 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_8), !map !55

ST_18: stg_84 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_7), !map !61

ST_18: stg_85 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_6), !map !67

ST_18: stg_86 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_5), !map !73

ST_18: stg_87 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_4), !map !79

ST_18: stg_88 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_3), !map !85

ST_18: stg_89 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_2), !map !91

ST_18: stg_90 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_1), !map !97

ST_18: stg_91 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap(i8* %search_string_0), !map !103

ST_18: stg_92 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap(i32* %m_mm2s_ctl), !map !109

ST_18: stg_93 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap(i32* %m_s2mm_ctl), !map !115

ST_18: stg_94 [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecBitsMap(i32* %s_in_V_V), !map !119

ST_18: stg_95 [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap(i32* %s_out_V_V), !map !123

ST_18: stg_96 [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecBitsMap(i32* %count_out), !map !127

ST_18: stg_97 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecBitsMap(i1 false) nounwind, !map !131

ST_18: stg_98 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @str) nounwind

ST_18: stg_99 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecWire(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_100 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecWire(i8* %search_string_0, i8* %search_string_1, i8* %search_string_2, i8* %search_string_3, i8* %search_string_4, i8* %search_string_5, i8* %search_string_6, i8* %search_string_7, i8* %search_string_8, i8* %search_string_9, i8* %search_string_10, i8* %search_string_11, i8* %search_string_12, i8* %search_string_13, i8* %search_string_14, i8* %search_string_15, i8* %search_string_16, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_101 [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecWire(i8* %search_string_0, i8* %search_string_1, i8* %search_string_2, i8* %search_string_3, i8* %search_string_4, i8* %search_string_5, i8* %search_string_6, i8* %search_string_7, i8* %search_string_8, i8* %search_string_9, i8* %search_string_10, i8* %search_string_11, i8* %search_string_12, i8* %search_string_13, i8* %search_string_14, i8* %search_string_15, i8* %search_string_16, [6 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_102 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecWire(i32* %count_out, [10 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_103 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecWire(i32* %count_out, [7 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_104 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecWire(i32 0, [11 x i8]* @p_str6, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_105 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecWire(i32* %s_out_V_V, [5 x i8]* @p_str7, i32 0, i32 0, i32 0, i32 1000, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_106 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecWire(i32* %s_in_V_V, [5 x i8]* @p_str7, i32 0, i32 0, i32 0, i32 1000, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_18: stg_107 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecWire(i32* %m_s2mm_ctl, [6 x i8]* @p_str8, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_18: stg_108 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecWire(i32* %m_mm2s_ctl, [6 x i8]* @p_str8, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_18: m_mm2s_ctl_addr_1_resp [1/2] 8.75ns
:74  %m_mm2s_ctl_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %m_mm2s_ctl_addr_1)

ST_18: stg_110 [1/1] 1.57ns
:75  br label %1


 <State 19>: 2.47ns
ST_19: i [1/1] 0.00ns
:0  %i = phi i29 [ 0, %0 ], [ %i_1, %5 ]

ST_19: search_index [1/1] 0.00ns
:1  %search_index = phi i32 [ 0, %0 ], [ %p_search_index_1, %5 ]

ST_19: count [1/1] 0.00ns
:2  %count = phi i32 [ 0, %0 ], [ %p_count, %5 ]

ST_19: exitcond1 [1/1] 2.47ns
:3  %exitcond1 = icmp eq i29 %i, -268435456

ST_19: empty_56 [1/1] 0.00ns
:4  %empty_56 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 268435456, i64 268435456, i64 268435456)

ST_19: i_1 [1/1] 2.44ns
:5  %i_1 = add i29 %i, 1

ST_19: stg_117 [1/1] 0.00ns
:6  br i1 %exitcond1, label %6, label %2

ST_19: tmp_V [1/1] 0.00ns
:0  %tmp_V = call i32 @_ssdm_op_Read.axis.volatile.i32P(i32* %s_in_V_V)

ST_19: p_Repl2_3 [1/1] 0.00ns
:1  %p_Repl2_3 = trunc i32 %tmp_V to i8

ST_19: p_Repl2_2 [1/1] 0.00ns
:2  %p_Repl2_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V, i32 8, i32 15)

ST_19: p_Repl2_1 [1/1] 0.00ns
:3  %p_Repl2_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V, i32 16, i32 23)

ST_19: p_Repl2_s [1/1] 0.00ns
:4  %p_Repl2_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_V, i32 24, i32 31)

ST_19: p_Result_2 [1/1] 0.00ns
:5  %p_Result_2 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %p_Repl2_3, i8 %p_Repl2_2, i8 %p_Repl2_1, i8 %p_Repl2_s)

ST_19: stg_124 [1/1] 1.25ns
:6  br label %3

ST_19: stg_125 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_vld.i32P(i32* %count_out, i32 %count)

ST_19: tmp [1/1] 0.00ns
:1  %tmp = call i1 @_ssdm_op_NbWriteReq.axis.i32P(i32* %s_out_V_V, i32 1)

ST_19: stg_127 [1/1] 0.00ns
:2  br i1 %tmp, label %._crit_edge, label %7

ST_19: stg_128 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.axis.volatile.i32P(i32* %s_out_V_V, i32 0)

ST_19: stg_129 [1/1] 0.00ns
:1  br label %._crit_edge

ST_19: stg_130 [1/1] 0.00ns
._crit_edge:0  ret i1 true


 <State 20>: 4.46ns
ST_20: data_out16_i [1/1] 0.00ns
:0  %data_out16_i = phi i8 [ undef, %2 ], [ %data_out16_1_i, %_ifconv.i ]

ST_20: data_out_i [1/1] 0.00ns
:1  %data_out_i = phi i8 [ undef, %2 ], [ %data_out_1_i, %_ifconv.i ]

ST_20: data_out2_i [1/1] 0.00ns
:2  %data_out2_i = phi i8 [ undef, %2 ], [ %newSel9, %_ifconv.i ]

ST_20: data_out3_i [1/1] 0.00ns
:3  %data_out3_i = phi i8 [ undef, %2 ], [ %newSel1, %_ifconv.i ]

ST_20: i_i [1/1] 0.00ns
:4  %i_i = phi i3 [ 0, %2 ], [ %i_2, %_ifconv.i ]

ST_20: exitcond_i [1/1] 1.62ns
:5  %exitcond_i = icmp eq i3 %i_i, -4

ST_20: empty_57 [1/1] 0.00ns
:6  %empty_57 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_20: i_2 [1/1] 0.80ns
:7  %i_2 = add i3 %i_i, 1

ST_20: stg_139 [1/1] 1.57ns
:8  br i1 %exitcond_i, label %unpack_word.exit, label %_ifconv.i

ST_20: tmp_9 [1/1] 0.00ns
_ifconv.i:0  %tmp_9 = trunc i3 %i_i to i2

ST_20: tmp_i [1/1] 0.00ns
_ifconv.i:1  %tmp_i = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %tmp_9, i3 0)

ST_20: Hi_assign [1/1] 1.37ns
_ifconv.i:2  %Hi_assign = xor i5 %tmp_i, -1

ST_20: Hi_assign_i_cast [1/1] 0.00ns
_ifconv.i:3  %Hi_assign_i_cast = zext i5 %Hi_assign to i32

ST_20: Lo_assign [1/1] 1.72ns
_ifconv.i:4  %Lo_assign = sub i5 -8, %tmp_i

ST_20: Lo_assign_i_cast [1/1] 0.00ns
_ifconv.i:5  %Lo_assign_i_cast = zext i5 %Lo_assign to i32

ST_20: p_Result_s [1/1] 0.00ns
_ifconv.i:6  %p_Result_s = call i32 @llvm.part.select.i32(i32 %p_Result_2, i32 %Lo_assign_i_cast, i32 %Hi_assign_i_cast) nounwind

ST_20: tmp_10 [1/1] 0.00ns
_ifconv.i:7  %tmp_10 = trunc i32 %p_Result_s to i8

ST_20: sel_tmp2_i [1/1] 1.36ns
_ifconv.i:8  %sel_tmp2_i = icmp eq i2 %tmp_9, 1

ST_20: sel_tmp9_i [1/1] 1.37ns
_ifconv.i:9  %sel_tmp9_i = select i1 %sel_tmp2_i, i8 %tmp_10, i8 %data_out16_i

ST_20: sel_tmp10_i [1/1] 1.36ns
_ifconv.i:10  %sel_tmp10_i = icmp eq i2 %tmp_9, 0

ST_20: data_out16_1_i [1/1] 1.37ns
_ifconv.i:11  %data_out16_1_i = select i1 %sel_tmp10_i, i8 %data_out16_i, i8 %sel_tmp9_i

ST_20: sel_tmp12_i [1/1] 1.36ns
_ifconv.i:12  %sel_tmp12_i = icmp eq i2 %tmp_9, -2

ST_20: data_out_1_i [1/1] 1.37ns
_ifconv.i:13  %data_out_1_i = select i1 %sel_tmp10_i, i8 %tmp_10, i8 %data_out_i

ST_20: or_cond [1/1] 1.37ns
_ifconv.i:14  %or_cond = or i1 %sel_tmp10_i, %sel_tmp2_i

ST_20: newSel7 [1/1] 1.37ns
_ifconv.i:15  %newSel7 = select i1 %sel_tmp12_i, i8 %tmp_10, i8 %data_out2_i

ST_20: newSel9 [1/1] 1.37ns
_ifconv.i:16  %newSel9 = select i1 %or_cond, i8 %data_out2_i, i8 %newSel7

ST_20: newSel [1/1] 1.37ns
_ifconv.i:17  %newSel = select i1 %sel_tmp12_i, i8 %data_out3_i, i8 %tmp_10

ST_20: newSel1 [1/1] 1.37ns
_ifconv.i:18  %newSel1 = select i1 %or_cond, i8 %data_out3_i, i8 %newSel

ST_20: stg_159 [1/1] 0.00ns
_ifconv.i:19  br label %3


 <State 21>: 5.47ns
ST_21: j [1/1] 0.00ns
unpack_word.exit:0  %j = phi i3 [ %j_1, %4 ], [ 0, %3 ]

ST_21: search_index_1 [1/1] 0.00ns
unpack_word.exit:1  %search_index_1 = phi i32 [ %search_index_2, %4 ], [ %search_index, %3 ]

ST_21: exitcond [1/1] 1.62ns
unpack_word.exit:2  %exitcond = icmp eq i3 %j, -4

ST_21: empty_58 [1/1] 0.00ns
unpack_word.exit:3  %empty_58 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_21: j_1 [1/1] 0.80ns
unpack_word.exit:4  %j_1 = add i3 %j, 1

ST_21: stg_165 [1/1] 0.00ns
unpack_word.exit:5  br i1 %exitcond, label %5, label %_ifconv

ST_21: tmp_11 [1/1] 0.00ns
_ifconv:0  %tmp_11 = trunc i3 %j to i2

ST_21: sel_tmp [1/1] 1.36ns
_ifconv:1  %sel_tmp = icmp eq i2 %tmp_11, 1

ST_21: sel_tmp1 [1/1] 1.37ns
_ifconv:2  %sel_tmp1 = select i1 %sel_tmp, i8 %data_out16_i, i8 %data_out3_i

ST_21: sel_tmp2 [1/1] 1.36ns
_ifconv:3  %sel_tmp2 = icmp eq i2 %tmp_11, -2

ST_21: sel_tmp3 [1/1] 1.37ns
_ifconv:4  %sel_tmp3 = select i1 %sel_tmp2, i8 %data_out2_i, i8 %sel_tmp1

ST_21: sel_tmp4 [1/1] 1.36ns
_ifconv:5  %sel_tmp4 = icmp eq i2 %tmp_11, 0

ST_21: data_word_load_phi [1/1] 1.37ns
_ifconv:6  %data_word_load_phi = select i1 %sel_tmp4, i8 %data_out_i, i8 %sel_tmp3

ST_21: tmp_12 [1/1] 0.00ns
_ifconv:7  %tmp_12 = trunc i32 %search_index_1 to i5

ST_21: stg_174 [1/1] 1.94ns
_ifconv:8  switch i5 %tmp_12, label %branch16 [
    i5 0, label %branch0
    i5 1, label %branch1
    i5 2, label %branch2
    i5 3, label %branch3
    i5 4, label %branch4
    i5 5, label %branch5
    i5 6, label %branch6
    i5 7, label %branch7
    i5 8, label %branch8
    i5 9, label %branch9
    i5 10, label %branch10
    i5 11, label %branch11
    i5 12, label %branch12
    i5 13, label %branch13
    i5 14, label %branch14
    i5 15, label %branch15
  ]

ST_21: search_string_15_read [1/1] 0.00ns
branch15:0  %search_string_15_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_15)

ST_21: stg_176 [1/1] 1.89ns
branch15:1  br label %4

ST_21: search_string_14_read [1/1] 0.00ns
branch14:0  %search_string_14_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_14)

ST_21: stg_178 [1/1] 1.89ns
branch14:1  br label %4

ST_21: search_string_13_read [1/1] 0.00ns
branch13:0  %search_string_13_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_13)

ST_21: stg_180 [1/1] 1.89ns
branch13:1  br label %4

ST_21: search_string_12_read [1/1] 0.00ns
branch12:0  %search_string_12_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_12)

ST_21: stg_182 [1/1] 1.89ns
branch12:1  br label %4

ST_21: search_string_11_read [1/1] 0.00ns
branch11:0  %search_string_11_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_11)

ST_21: stg_184 [1/1] 1.89ns
branch11:1  br label %4

ST_21: search_string_10_read [1/1] 0.00ns
branch10:0  %search_string_10_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_10)

ST_21: stg_186 [1/1] 1.89ns
branch10:1  br label %4

ST_21: search_string_9_read [1/1] 0.00ns
branch9:0  %search_string_9_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_9)

ST_21: stg_188 [1/1] 1.89ns
branch9:1  br label %4

ST_21: search_string_8_read [1/1] 0.00ns
branch8:0  %search_string_8_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_8)

ST_21: stg_190 [1/1] 1.89ns
branch8:1  br label %4

ST_21: search_string_7_read [1/1] 0.00ns
branch7:0  %search_string_7_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_7)

ST_21: stg_192 [1/1] 1.89ns
branch7:1  br label %4

ST_21: search_string_6_read [1/1] 0.00ns
branch6:0  %search_string_6_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_6)

ST_21: stg_194 [1/1] 1.89ns
branch6:1  br label %4

ST_21: search_string_5_read [1/1] 0.00ns
branch5:0  %search_string_5_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_5)

ST_21: stg_196 [1/1] 1.89ns
branch5:1  br label %4

ST_21: search_string_4_read [1/1] 0.00ns
branch4:0  %search_string_4_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_4)

ST_21: stg_198 [1/1] 1.89ns
branch4:1  br label %4

ST_21: search_string_3_read [1/1] 0.00ns
branch3:0  %search_string_3_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_3)

ST_21: stg_200 [1/1] 1.89ns
branch3:1  br label %4

ST_21: search_string_2_read [1/1] 0.00ns
branch2:0  %search_string_2_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_2)

ST_21: stg_202 [1/1] 1.89ns
branch2:1  br label %4

ST_21: search_string_1_read [1/1] 0.00ns
branch1:0  %search_string_1_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_1)

ST_21: stg_204 [1/1] 1.89ns
branch1:1  br label %4

ST_21: search_string_0_read [1/1] 0.00ns
branch0:0  %search_string_0_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_0)

ST_21: stg_206 [1/1] 1.89ns
branch0:1  br label %4

ST_21: search_string_16_read [1/1] 0.00ns
branch16:0  %search_string_16_read = call i8 @_ssdm_op_Read.ap_hs.i8P(i8* %search_string_16)

ST_21: stg_208 [1/1] 1.89ns
branch16:1  br label %4

ST_21: tmp_7 [1/1] 2.52ns
:0  %tmp_7 = icmp sgt i32 %search_index_1, 16

ST_21: count_1 [1/1] 2.44ns
:1  %count_1 = add nsw i32 %count, 1

ST_21: p_search_index_1 [1/1] 1.37ns
:2  %p_search_index_1 = select i1 %tmp_7, i32 0, i32 %search_index_1

ST_21: p_count [1/1] 1.37ns
:3  %p_count = select i1 %tmp_7, i32 %count_1, i32 %count

ST_21: stg_213 [1/1] 0.00ns
:4  br label %1


 <State 22>: 3.81ns
ST_22: search_string_load_phi [1/1] 0.00ns
:0  %search_string_load_phi = phi i8 [ %search_string_0_read, %branch0 ], [ %search_string_1_read, %branch1 ], [ %search_string_2_read, %branch2 ], [ %search_string_3_read, %branch3 ], [ %search_string_4_read, %branch4 ], [ %search_string_5_read, %branch5 ], [ %search_string_6_read, %branch6 ], [ %search_string_7_read, %branch7 ], [ %search_string_8_read, %branch8 ], [ %search_string_9_read, %branch9 ], [ %search_string_10_read, %branch10 ], [ %search_string_11_read, %branch11 ], [ %search_string_12_read, %branch12 ], [ %search_string_13_read, %branch13 ], [ %search_string_14_read, %branch14 ], [ %search_string_15_read, %branch15 ], [ %search_string_16_read, %branch16 ]

ST_22: tmp_2 [1/1] 2.00ns
:1  %tmp_2 = icmp eq i8 %data_word_load_phi, %search_string_load_phi

ST_22: search_index_3 [1/1] 2.44ns
:2  %search_index_3 = add nsw i32 %search_index_1, 1

ST_22: search_index_2 [1/1] 1.37ns
:3  %search_index_2 = select i1 %tmp_2, i32 %search_index_3, i32 0

ST_22: stg_218 [1/1] 0.00ns
:4  br label %unpack_word.exit



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
