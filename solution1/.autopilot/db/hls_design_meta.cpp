#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_m_mm2s_ctl_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_m_mm2s_ctl_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_mm2s_ctl_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_m_mm2s_ctl_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_m_mm2s_ctl_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_m_mm2s_ctl_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_m_mm2s_ctl_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_m_mm2s_ctl_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_m_mm2s_ctl_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_m_mm2s_ctl_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_mm2s_ctl_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_m_mm2s_ctl_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_m_mm2s_ctl_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_m_mm2s_ctl_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_m_mm2s_ctl_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_m_mm2s_ctl_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_m_mm2s_ctl_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_mm2s_ctl_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_m_mm2s_ctl_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_m_mm2s_ctl_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_m_mm2s_ctl_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_m_s2mm_ctl_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_m_s2mm_ctl_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_s2mm_ctl_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_m_s2mm_ctl_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_m_s2mm_ctl_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_m_s2mm_ctl_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_m_s2mm_ctl_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_m_s2mm_ctl_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_m_s2mm_ctl_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_m_s2mm_ctl_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_s2mm_ctl_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_m_s2mm_ctl_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_m_s2mm_ctl_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_m_s2mm_ctl_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_m_s2mm_ctl_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_m_s2mm_ctl_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_m_s2mm_ctl_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_m_s2mm_ctl_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_m_s2mm_ctl_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_m_s2mm_ctl_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_m_s2mm_ctl_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("s_in_V_V_TDATA", 32, hls_in, 2, "axis", "in_data", 1),
	Port_Property("s_in_V_V_TVALID", 1, hls_in, 2, "axis", "in_vld", 1),
	Port_Property("s_in_V_V_TREADY", 1, hls_out, 2, "axis", "in_acc", 1),
	Port_Property("s_out_V_V_TDATA", 32, hls_out, 3, "axis", "out_data", 1),
	Port_Property("s_out_V_V_TVALID", 1, hls_out, 3, "axis", "out_vld", 1),
	Port_Property("s_out_V_V_TREADY", 1, hls_in, 3, "axis", "out_acc", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "memory_scanner";
